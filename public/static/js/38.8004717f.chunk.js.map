{"version":3,"sources":["pages/admin section/settings/Contacts.js"],"names":["Contacts","props","t","useTranslation","useState","error","setError","btnLoading","setBtnLoading","loading","setLoading","PERMISSIONS","useForm","defaultValues","mobile","email","address","moreInfo","idContactInfo","control","handleSubmit","setValue","useEffect","getData","request","get","data","contactData","onSaveClick","post","basic","title","name","render","field","Input","label","ref","onChange","TextArea","ADD","UPDATE","fluid","content","primary","onClick","errors","console","log"],"mappings":"kNA+HeA,UAvHE,SAACC,GACd,IAAQC,EAAMC,cAAND,EACR,EAA0BE,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAAoCF,oBAAS,GAAM,mBAA5CG,EAAU,KAAEC,EAAa,KAChC,EAA8BJ,oBAAS,GAAM,mBAAtCK,EAAO,KAAEC,EAAU,KAClBC,EAAgBV,EAAhBU,YAGR,EAA4CC,YAAQ,CAChDC,cAAe,CACXC,OAAQ,GACRC,MAAO,GACPC,QAAS,GACTC,SAAU,GACVC,cAAe,QANfC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAcC,EAAQ,EAARA,SAU/BC,qBAAU,WACNC,GAEJ,GAAG,IAGH,IAGMA,EAAO,iDAAG,kGAES,OAFT,SAERb,GAAW,GAAM,SACgBc,IAAQC,IAAI,4BAA4B,KAAD,WAAxDC,EAAI,EAAZA,KAAQA,MACVC,EAAcD,EAAK,MAErBL,EAAS,QAASM,EAAYZ,OAC9BM,EAAS,SAAUM,EAAYb,QAC/BO,EAAS,UAAWM,EAAYX,SAChCK,EAAS,WAAYM,EAAYV,UACjCI,EAAS,gBAAiBM,EAAYT,gBACzC,kDAEDZ,EAAS,EAAD,IAAM,QAEI,OAFJ,UAEdI,GAAW,GAAO,6EAEzB,kBAjBY,mCAmBPkB,EAAW,iDAAG,WAAOF,GAAI,2EAEH,OAFG,SAEvBlB,GAAc,GAAM,SACdgB,IAAQK,KAAK,6BAA8BH,GAAM,KAAD,iDAEtDpB,EAAS,EAAD,IAAM,OAEO,OAFP,SAEdE,GAAc,GAAO,0EAE5B,gBATgB,sCAWjB,OAAIC,EAAgB,cAAC,IAAO,IACxBJ,EAAc,cAAC,IAAY,IAE3B,eAAC,IAAO,CAACyB,OAAK,YACV,cAAC,IAAU,CAACC,MAAO7B,EAAE,eACrB,cAAC,IAAO,CAAC4B,OAAK,WACV,eAAC,IAAI,WACD,cAAC,IAAU,CACPE,KAAK,SACLb,QAASA,EACTc,OAAQ,gBAAGC,EAAK,EAALA,MAAK,OACZ,cAAC,IAAKC,MAAK,yBACPC,MAAOlC,EAAE,WACLgC,GAAK,IACTG,IAAK,KACLC,SAAUJ,EAAMI,WAClB,IAGV,cAAC,IAAU,CACPN,KAAK,QACLb,QAASA,EACTc,OAAQ,gBAAGC,EAAK,EAALA,MAAK,OACZ,cAAC,IAAKC,MAAK,yBACPC,MAAOlC,EAAE,UACLgC,GAAK,IACTG,IAAK,KACLC,SAAUJ,EAAMI,WAClB,IAGV,cAAC,IAAU,CACPN,KAAK,UACLb,QAASA,EACTc,OAAQ,gBAAGC,EAAK,EAALA,MAAK,OACZ,cAAC,IAAKK,SAAQ,yBACVH,MAAOlC,EAAE,YACLgC,GAAK,IACTG,IAAK,KACLC,SAAUJ,EAAMI,WAClB,IAGV,cAAC,IAAU,CACPN,KAAK,WACLb,QAASA,EACTc,OAAQ,gBAAGC,EAAK,EAALA,MAAK,OACZ,cAAC,IAAKK,SAAQ,yBACVH,MAAOlC,EAAE,UACLgC,GAAK,IACTG,IAAK,KACLC,SAAUJ,EAAMI,WAClB,KAGR3B,EAAY6B,KAAO7B,EAAY8B,SAAW,cAAC,IAAM,CAACC,OAAK,EAACjC,QAASF,EAAYoC,QAASzC,EAAE,QAAS0C,SAAO,EAACC,QAASzB,GAxFnH,SAACM,GAAI,OAAKE,EAAYF,EAAM,IAC7B,SAACoB,GAAM,OAAKC,QAAQC,IAAIF,EAAQ,aA4FpD,C","file":"static/js/38.8004717f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\nimport request from '../../../api';\r\nimport { ErrorSegment, PageHeader, Spinner } from '../../../components';\r\n\r\nconst Contacts = (props) => {\r\n    const { t } = useTranslation();\r\n    const [error, setError] = useState('');\r\n    const [btnLoading, setBtnLoading] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const { PERMISSIONS } = props;\r\n\r\n\r\n    const { control, handleSubmit, setValue } = useForm({\r\n        defaultValues: {\r\n            mobile: '',\r\n            email: '',\r\n            address: '',\r\n            moreInfo: '',\r\n            idContactInfo: null\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    const onSubmit = (data) => onSaveClick(data);\r\n    const onError = (errors) => console.log(errors);\r\n\r\n    const getData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const { data: { data } } = await request.get('/admin/contact-info/full');\r\n            const contactData = data[0];\r\n            if (contactData) {\r\n                setValue('email', contactData.email);\r\n                setValue('mobile', contactData.mobile);\r\n                setValue('address', contactData.address);\r\n                setValue('moreInfo', contactData.moreInfo);\r\n                setValue('idContactInfo', contactData.idContactInfo);\r\n            }\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const onSaveClick = async (data) => {\r\n        try {\r\n            setBtnLoading(true);\r\n            await request.post('/admin/contact-info/update', data);\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setBtnLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading) return <Spinner />;\r\n    if (error) return <ErrorSegment />;\r\n    return (\r\n        <Segment basic>\r\n            <PageHeader title={t('ContactUs')} />\r\n            <Segment basic>\r\n                <Form>\r\n                    <Controller\r\n                        name='mobile'\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <Form.Input\r\n                                label={t('Mobile')}\r\n                                {...field}\r\n                                ref={null}\r\n                                onChange={field.onChange}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Controller\r\n                        name='email'\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <Form.Input\r\n                                label={t('Email')}\r\n                                {...field}\r\n                                ref={null}\r\n                                onChange={field.onChange}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Controller\r\n                        name='address'\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <Form.TextArea\r\n                                label={t('Address')}\r\n                                {...field}\r\n                                ref={null}\r\n                                onChange={field.onChange}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Controller\r\n                        name='moreInfo'\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <Form.TextArea\r\n                                label={t('Other')}\r\n                                {...field}\r\n                                ref={null}\r\n                                onChange={field.onChange}\r\n                            />\r\n                        )}\r\n                    />\r\n                    {(PERMISSIONS.ADD || PERMISSIONS.UPDATE) && <Button fluid loading={btnLoading} content={t(\"Save\")} primary onClick={handleSubmit(onSubmit, onError)} />}\r\n                </Form>\r\n            </Segment>\r\n        </Segment>\r\n    );\r\n};\r\n\r\nexport default Contacts;"],"sourceRoot":""}