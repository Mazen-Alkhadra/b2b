{"version":3,"sources":["pages/admin section/settings/Privacy.js"],"names":["Privacy","props","t","useTranslation","useState","error","setError","btnLoading","setBtnLoading","loading","setLoading","PERMISSIONS","useForm","defaultValues","contentEn","idPrivacyPolicy","control","handleSubmit","setValue","useEffect","getData","request","get","data","privacyData","onSaveClick","post","basic","title","name","render","field","TextArea","label","ref","onChange","UPDATE","ADD","fluid","content","primary","onClick","errors","console","log"],"mappings":"kNAmFeA,UA3EC,SAACC,GACb,IAAQC,EAAMC,cAAND,EACR,EAA0BE,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAAoCF,oBAAS,GAAM,mBAA5CG,EAAU,KAAEC,EAAa,KAChC,EAA8BJ,oBAAS,GAAM,mBAAtCK,EAAO,KAAEC,EAAU,KAClBC,EAAgBV,EAAhBU,YAER,EAA4CC,YAAQ,CAChDC,cAAe,CACXC,UAAW,GACXC,gBAAiB,QAHjBC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAcC,EAAQ,EAARA,SAO/BC,qBAAU,WACNC,GAEJ,GAAG,IAEH,IAAMA,EAAO,iDAAG,kGAES,OAFT,SAERV,GAAW,GAAM,SACgBW,IAAQC,IAAI,8BAA8B,KAAD,WAA1DC,EAAI,EAAZA,KAAQA,MACVC,EAAcD,EAAK,MAErBL,EAAS,YAAaM,EAAYV,WAClCI,EAAS,kBAAmBM,EAAYT,kBAC3C,kDAEDT,EAAS,EAAD,IAAM,QAEI,OAFJ,UAEdI,GAAW,GAAO,6EAEzB,kBAdY,mCAmBPe,EAAW,iDAAG,WAAOF,GAAI,2EAEH,OAFG,SAEvBf,GAAc,GAAM,SACda,IAAQK,KAAK,+BAAgCH,GAAM,KAAD,iDAExDjB,EAAS,EAAD,IAAM,OAEO,OAFP,SAEdE,GAAc,GAAO,0EAE5B,gBATgB,sCAWjB,OAAIC,EAAgB,cAAC,IAAO,IACxBJ,EAAc,cAAC,IAAY,IAE3B,eAAC,IAAO,CAACsB,OAAK,YACV,cAAC,IAAU,CAACC,MAAO1B,EAAE,aACrB,cAAC,IAAO,CAACyB,OAAK,WACV,eAAC,IAAI,WACD,cAAC,IAAU,CACPE,KAAK,YACLb,QAASA,EACTc,OAAQ,gBAAGC,EAAK,EAALA,MAAK,OACZ,cAAC,IAAKC,SAAQ,yBACVC,MAAO/B,EAAE,YACL6B,GAAK,IACTG,IAAK,KACLC,SAAUJ,EAAMI,WAClB,KAGRxB,EAAYyB,QAAUzB,EAAY0B,MAAQ,cAAC,IAAM,CAACC,OAAK,EAAC7B,QAASF,EAAYgC,QAASrC,EAAE,QAASsC,SAAO,EAACC,QAASxB,GAjCnH,SAACM,GAAI,OAAKE,EAAYF,EAAM,IAC7B,SAACmB,GAAM,OAAKC,QAAQC,IAAIF,EAAQ,aAqCpD,C","file":"static/js/39.3ef55c0a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\nimport request from '../../../api';\r\nimport { ErrorSegment, PageHeader, Spinner } from '../../../components';\r\n\r\nconst Privacy = (props) => {\r\n    const { t } = useTranslation();\r\n    const [error, setError] = useState('');\r\n    const [btnLoading, setBtnLoading] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const { PERMISSIONS } = props;\r\n\r\n    const { control, handleSubmit, setValue } = useForm({\r\n        defaultValues: {\r\n            contentEn: '',\r\n            idPrivacyPolicy: null\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    const getData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const { data: { data } } = await request.get('/admin/privacy-policy/full');\r\n            const privacyData = data[0];\r\n            if (privacyData) {\r\n                setValue('contentEn', privacyData.contentEn);\r\n                setValue('idPrivacyPolicy', privacyData.idPrivacyPolicy);\r\n            }\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const onSubmit = (data) => onSaveClick(data);\r\n    const onError = (errors) => console.log(errors);\r\n\r\n    const onSaveClick = async (data) => {\r\n        try {\r\n            setBtnLoading(true);\r\n            await request.post('/admin/privacy-policy/update', data);\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setBtnLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading) return <Spinner />;\r\n    if (error) return <ErrorSegment />;\r\n    return (\r\n        <Segment basic>\r\n            <PageHeader title={t('Privacy')} />\r\n            <Segment basic>\r\n                <Form>\r\n                    <Controller\r\n                        name='contentEn'\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <Form.TextArea\r\n                                label={t('Privacy')}\r\n                                {...field}\r\n                                ref={null}\r\n                                onChange={field.onChange}\r\n                            />\r\n                        )}\r\n                    />\r\n                    {(PERMISSIONS.UPDATE || PERMISSIONS.ADD) && <Button fluid loading={btnLoading} content={t(\"Save\")} primary onClick={handleSubmit(onSubmit, onError)} />}\r\n                </Form>\r\n            </Segment>\r\n        </Segment>\r\n    );\r\n};\r\n\r\nexport default Privacy;"],"sourceRoot":""}