{"version":3,"sources":["pages/admin section/customers/PreferredProductsModal.js","pages/admin section/customers/Clients.js","../node_modules/semantic-ui-react/dist/es/lib/hooks/useIsomorphicLayoutEffect.js","../node_modules/semantic-ui-react/dist/es/lib/hooks/useClassNamesOnNode.js","helpers/datagridExporter.js","../node_modules/semantic-ui-react/dist/es/modules/Modal/ModalActions.js","../node_modules/semantic-ui-react/dist/es/modules/Modal/ModalContent.js","../node_modules/semantic-ui-react/dist/es/modules/Modal/ModalDescription.js","../node_modules/semantic-ui-react/dist/es/modules/Modal/ModalDimmer.js","../node_modules/semantic-ui-react/dist/es/modules/Modal/ModalHeader.js","../node_modules/semantic-ui-react/dist/es/modules/Modal/utils/index.js","../node_modules/semantic-ui-react/dist/es/modules/Modal/Modal.js"],"names":["withTranslation","idUser","t","isArabic","i18next","language","noExtraSpaces","Styles","useState","categories","setCategories","brands","setBrands","products","setProducts","preferredCategories","setPreferredCategories","categoryId","brandId","selectedPath","setSelectedPath","loading","setLoading","error","setError","handlePath","props","value","useEffect","getCategories","getBrands","getProducts","categoriesDataLookup","load","apps","data","request","get","params","prefsApps","idCategory","brandsDataLookup","productsDataLookup","Segment","basic","padded","Grid","columns","stretched","verticalAlign","divided","GridColumn","Header","as","content","Form","map","app","indx","isSelectedApplication","Field","style","width","Checkbox","checked","find","p","onChange","e","filter","productId","onCategoryToggle","disabled","onClick","display","justifyContent","color","cursor","nameAr","nameEn","Icon","link","name","b","fam","isSelectedFamily","idBrand","fa","findIndex","toRemove","includes","onBrandToggle","qul","label","q","idProduct","findQuality","temp","splice","onProductToggle","DS","store","companiesDataLookup","RequireFetchData","useTranslation","companies","PERMISSIONS","gridRef","createRef","showPreferredProducts","setShowPreferredProducts","row","setRow","title","ref","dataSource","usersDataGrid","showBorders","showColumnLines","columnHidingEnabled","wordWrapEnabled","columnAutoWidth","repaintChangesOnly","remoteOperations","allowColumnResizing","allowColumnReordering","onExporting","datagridExporter","onToolbarPreparing","UPDATE","toolbarOptions","items","unshift","location","widget","options","icon","hint","selectedBranches","current","instance","getSelectedRowKeys","length","activate","isAccepted","usersIds","_instance","refresh","selection","allowSelectAll","mode","selectAllMode","showCheckBoxesMode","loadPanel","indicatorSrc","LoadingGifImage","visible","useIcons","allowUpdating","allowDeleting","DELETE","allowAdding","ADD","refreshMode","itemType","colCount","colSpan","dataField","isRequired","editorOptions","placeholder","editorType","height","caption","dataType","valueExpr","displayExpr","type","cellRender","onShowPreferredProducts","enabled","EXPORT","Modal","onClose","open","closeIcon","header","size","centered","closeOnDimmerClick","useIsomorphicLayoutEffect","isBrowser","React","useLayoutEffect","CLASS_NAME_DELITIMITER","prevClassNames","Map","handleClassNamesChange","node","classNameRefs","currentClassNames","classNames","forEach","classNameRef","split","className","push","i","array","indexOf","computeClassNames","_computeClassNamesDif","computeClassNamesDifference","forAdd","forRemoval","classList","add","remove","set","nodeRegistry","_this","this","nodes","has","Set","del","delete","emit","callback","useClassNamesOnNode","useRef","isMounted","element","isRefObject","htmlColumns","objectColumns","workbook","ExcelJS","Workbook","worksheet","addWorksheet","exportDataGrid","component","customizeCell","gridCell","excelCell","rowType","objCol","c","column","v","d","fieldName1","fieldName2","displayName","join","htmlToText","wordwrap","Date","toDateString","fill","pattern","fgColor","argb","font","italic","then","xlsx","writeBuffer","buffer","saveAs","Blob","cancel","ModalActions","_Component","_len","arguments","args","Array","_key","call","apply","concat","handleButtonOverrides","predefinedProps","buttonProps","_invoke","_inheritsLoose","prototype","render","_this2","_this$props","actions","children","classes","cx","rest","getUnhandledProps","ElementType","getElementType","childrenUtils","isNil","createElement","_extends","_map","action","Button","create","overrideProps","Component","ModalContent","image","scrolling","useKeyOnly","handledProps","propTypes","createShorthandFactory","ModalDescription","ModalDimmer","blurring","inverted","mountNode","bodyClasses","setProperty","Ref","innerRef","ModalHeader","canFit","modalRect","scrollHeight","contextHeight","window","innerHeight","getLegacyStyles","isFitted","marginTop","marginLeft","isLegacy","ActiveXObject","legacy","dimmerRef","latestDocumentMouseDownEvent","getMountNode","document","body","handleActionsOverrides","onActionClick","actionProps","handleClose","setState","handleDocumentMouseDown","handleDocumentClick","currentDocumentMouseDownEvent","doesNodeContainClick","handleIconOverrides","handleOpen","handlePortalMount","eventPool","setPositionAndClassNames","eventStack","sub","pool","target","handlePortalUnmount","cancelAnimationFrame","animationRequestId","unsub","newState","rect","getBoundingClientRect","legacyStyles","shallowEqual","state","_isEmpty","requestAnimationFrame","renderContent","_this$state","closeIconName","closeIconJSX","Fragment","autoGenerateKey","_proto","componentWillUnmount","_this$props2","closeOnDocumentClick","dimmer","trigger","_this$state2","isValidElement","unhandled","portalPropNames","Portal","_reduce","acc","val","key","_includes","portalProps","_pick","onMount","onOpen","onUnmount","_isPlainObject","defaultProps","autoControlledProps","Actions","Content","Description","Dimmer"],"mappings":"uWA8PeA,iBArPgB,SAAH,GAAuB,IAAjBC,EAAM,EAANA,OAAQC,EAAC,EAADA,EAChCC,EAAgC,OAArBC,IAAQC,SACjBC,EAAkBC,IAAlBD,cACR,EAAoCE,mBAAS,IAAG,mBAAzCC,EAAU,KAAEC,EAAa,KAChC,EAA4BF,mBAAS,IAAG,mBAAjCG,EAAM,KAAEC,EAAS,KACxB,EAAgCJ,mBAAS,IAAG,mBAArCK,EAAQ,KAAEC,EAAW,KAC5B,EAAsDN,mBAAS,IAAG,mBAA3DO,EAAmB,KAAEC,EAAsB,KAClD,EAAwCR,mBAAS,CAAES,WAAY,KAAMC,QAAS,OAAO,mBAA9EC,EAAY,KAAEC,EAAe,KACpC,EAA8BZ,oBAAS,GAAM,mBAAtCa,EAAO,KAAEC,EAAU,KAC1B,EAA0Bd,mBAAS,IAAG,mBAA/Be,EAAK,KAAEC,EAAQ,KACtB,EAAsChB,oBAAS,GAAM,oBAE/CiB,IAFY,MAAgB,MAEf,SAAH,GAA0B,IAApBC,EAAK,EAALA,MAAOC,EAAK,EAALA,MACzBP,EAAgB,2BAAKD,GAAY,gBAAED,QAAS,MAAOQ,EAAQC,IAC/D,GAGAC,qBAAU,WACNC,KACAC,KACAC,IAEJ,GAAG,IAEH,IAAMF,GAAa,iDAAG,sGACD,OAAjBP,GAAW,GAAM,kBAEgBU,IAAqBC,OAAO,KAAD,EAA5C,OAA4C,SAA1CC,EAAI,EAAVC,KAAI,SACgCC,IAAQC,IAAI,0BAA2B,CAAEC,OAAQ,CAAErC,YAAY,KAAD,WAApFsC,EAAS,EAAvBJ,KAAQA,KAChBzB,EAAcwB,GACdlB,EAAuBuB,GACvBd,GAAW,CAAEC,MAAO,aAAcC,MAAc,QAAT,EAAEO,EAAK,UAAE,aAAP,EAASM,aAAc,kDAEhEhB,EAAS,EAAD,IAAM,QAEI,OAFJ,UAEdF,GAAW,GAAO,6EAEzB,kBAbkB,mCAebQ,GAAS,iDAAG,yHAEaW,IAAiBR,OAAO,KAAD,WAAtCE,EAAI,EAAJA,KACRvB,EAAUuB,GAAM,gDAEhBX,EAAS,EAAD,IAAM,yDAErB,kBAPc,mCASTO,GAAW,iDAAG,yHAEWW,IAAmBT,OAAO,KAAD,WAAxCE,EAAI,EAAJA,KACRrB,EAAYqB,GAAM,gDAElBX,EAAS,EAAD,IAAM,yDAGrB,kBARgB,mCAiFjB,OAAIH,EAAgB,cAACsB,EAAA,EAAO,CAACC,OAAK,EAACC,QAAM,EAACxB,QAASA,IAC/CE,EAAc,cAAC,IAAY,IAG3B,cAACoB,EAAA,EAAO,CAACC,OAAK,WACV,eAACE,EAAA,EAAI,CAACC,QAAQ,QAAQC,WAAS,EAACC,cAAc,MAAMC,SAAO,YACvD,eAACC,EAAA,EAAU,WAOP,cAACC,EAAA,EAAM,CAACC,GAAG,KAAKC,QAASpD,EAAE,gBAC3B,cAACqD,EAAA,EAAI,UAEG9C,EAAW+C,KAAI,SAACC,EAAKC,GACjB,IAAMC,EAAwBxC,EAAaF,aAAewC,EAAIjB,WAC9D,OAAO,cAACe,EAAA,EAAKK,MAAK,CAAYC,MAAOvD,EAAc,SAC/C,eAACwC,EAAA,EAAI,CAACC,QAAQ,IAAG,UACb,cAACI,EAAA,EAAU,CAACW,MAAM,IAAG,SACjB,cAACC,EAAA,EAAQ,CACLC,UAAWjD,EAAoBkD,MAAK,SAAAC,GAAC,OAAIA,EAAEjD,aAAewC,EAAIjB,UAAU,IACxE2B,SAAU,SAACC,EAAE,GAAkB,IAAfJ,EAAO,EAAPA,SAxEnC,SAACP,GAClB1C,EAAoBkD,MAAK,SAAAC,GAAC,OAAIA,EAAEjD,aAAewC,EAAIjB,UAAU,IAC7DxB,EAAuBD,EAAoBsD,QAAO,SAAAH,GAAC,OAAIA,EAAEjD,aAAewC,EAAIjB,UAAU,KACrFxB,EAAuB,GAAD,mBAAKD,GAAmB,CAAE,CAAEd,SAAQgB,WAAYwC,EAAIjB,WAAYtB,QAAS,KAAMoD,UAAW,QACzH,CAqEgDC,CAAiBd,GACbO,GACAvC,GAAW,CAAEC,MAAO,aAAcC,MAAO8B,EAAIjB,YACrD,EACAgC,UAAQ,MAIhB,cAACrB,EAAA,EAAU,CAACW,MAAM,KAAI,SAClB,sBACIW,QAAS,kBAAMhD,GAAW,CAAEC,MAAO,aAAcC,MAAO8B,EAAIjB,YAAa,EACzEqB,MAAO,CAAEa,QAAS,OAAQC,eAAgB,gBAAiBC,MAAOjB,EAAwB,OAAS,QAASkB,OAAQ,WAAY,UAEhI,uBAAOhB,MAAO,CAAEgB,OAAQ,WAAY,SAAE1E,EAAWsD,EAAIqB,OAASrB,EAAIsB,SAClE,cAACC,EAAA,EAAI,CACDC,MAAI,EACJC,KAAMvB,EAAwB,gBAAkB,eAChDiB,MAAOjB,EAAwB,OAAS,mBAvBpCD,EA6B5B,SAKZ,eAACP,EAAA,EAAU,WACP,cAACC,EAAA,EAAM,CAACC,GAAG,KAAKC,QAASpD,EAAE,YAC3B,cAACqD,EAAA,EAAI,UAEG5C,EAAO0D,QAAO,SAAAc,GAAC,OAAIA,EAAElE,aAAeE,EAAaF,UAAU,IAAEuC,KAAI,SAAC4B,EAAK1B,GACnE,IAAM2B,EAAmBlE,EAAaD,UAAYkE,EAAIE,QACtD,OAAO,cAAC/B,EAAA,EAAKK,MAAK,CAAYC,MAAOvD,EAAc,SAC/C,eAACwC,EAAA,EAAI,CAACC,QAAQ,IAAG,UACb,cAACI,EAAA,EAAU,CAACW,MAAM,IAAG,SACjB,cAACC,EAAA,EAAQ,CACLC,UAAWjD,EAAoBsD,QAAO,SAAAH,GAAC,OAAIA,EAAEjD,aAAeE,EAAaF,UAAU,IAAEgD,MAAK,SAAAsB,GAAE,OAAIA,EAAGrE,UAAYkE,EAAIE,OAAO,IAC1HnB,SAAU,SAACC,EAAE,GAAkB,IAAfJ,EAAO,EAAPA,SA1GtC,SAACoB,GAEnB,IAAoB,IADDrE,EAAoByE,WAAU,SAAAtB,GAAC,OAAIA,EAAEjD,aAAeE,EAAaF,YAAciD,EAAEhD,UAAYkE,EAAIE,OAAO,IACpG,CACnB,IAAMG,EAAW1E,EAAoBsD,QAAO,SAAAH,GAAC,OAAIA,EAAEjD,aAAeE,EAAaF,YAAciD,EAAEhD,UAAYkE,EAAIE,OAAO,IACtHtE,EAAuBD,EAAoBsD,QAAO,SAAAH,GAAC,OAAKuB,EAASC,SAASxB,EAAE,IAChF,MACKlD,EAAuB,GAAD,mBAAKD,GAAmB,CAAE,CAAEd,SAAQgB,WAAYE,EAAaF,WAAYC,QAASkE,EAAIE,QAAShB,UAAW,QACzI,CAoGgDqB,CAAcP,GACVpB,GACAvC,GAAW,CAAEC,MAAO,UAAWC,MAAOyD,EAAIE,SAClD,EAEAd,UAAQ,MAGhB,cAACrB,EAAA,EAAU,CAACW,MAAM,KAAI,SAClB,sBACIW,QAAS,kBAAMhD,GAAW,CAAEC,MAAO,UAAWC,MAAOyD,EAAIE,SAAU,EACnEzB,MAAO,CAAEa,QAAS,OAAQC,eAAgB,gBAAiBC,MAAOS,EAAmB,OAAS,QAASR,OAAQ,WAAY,UAE3H,uBAAOhB,MAAO,CAAEgB,OAAQ,WAAY,SAAE1E,EAAWiF,EAAIN,OAASM,EAAIL,SAClE,cAACC,EAAA,EAAI,CACDC,MAAI,EACJC,KAAMG,EAAmB,gBAAkB,eAC3CT,MAAOS,EAAmB,OAAS,mBAvB/B3B,EA6B5B,SAKZ,eAACP,EAAA,EAAU,WACP,cAACC,EAAA,EAAM,CAACC,GAAG,KAAKC,QAASpD,EAAE,cAC3B,cAACqD,EAAA,EAAI,UAEG1C,EAASwD,QAAO,SAAAH,GAAC,OAAIA,EAAEhD,UAAYC,EAAaD,OAAO,IAAEsC,KAAI,SAACoC,EAAKlC,GAAI,OAAK,cAACH,EAAA,EAAKK,MAAK,UACnF,cAACG,EAAA,EAAQ,CACL8B,MAAO1F,EAAWyF,EAAId,OAASc,EAAIb,OACnCf,UAAWjD,EAAoBsD,QAAO,SAAAH,GAAC,OAAIA,EAAEjD,aAAeE,EAAaF,YAAciD,EAAEhD,UAAYC,EAAaD,OAAO,IAAE+C,MAAK,SAAA6B,GAAC,OAAIA,EAAExB,YAAcsB,EAAIG,SAAS,IAClK5B,SAAU,kBAtIlB,SAACyB,GACrB,IAAMI,EAAcjF,EAAoByE,WAAU,SAAAtB,GAAC,OAAIA,EAAEjD,aAAeE,EAAaF,YAAciD,EAAEhD,UAAYC,EAAaD,SAAWgD,EAAEI,YAAcsB,EAAIG,SAAS,IACtK,IAAqB,IAAjBC,EAAoB,CACpB,IAAMC,EAAI,YAAOlF,GACjBkF,EAAKC,OAAOF,EAAa,GACzBhF,EAAuBiF,EAC3B,MACKjF,EAAuB,GAAD,mBAAKD,GAAmB,CAAE,CAAEd,SAAQgB,WAAYE,EAAaF,WAAYC,QAASC,EAAaD,QAASoD,UAAWsB,EAAIG,aACtJ,CA8HgDI,CAAgBP,EAAI,EAEpCpB,UAAQ,KAN6Ed,EAQhF,aAUzC,ICnCM0C,EAAK,CAEP,CACIC,MAAOC,IACPpB,KAAM,cAKCqB,uBArNC,SAAC7E,GACb,IAAQxB,EAAMsG,cAANtG,EACAuG,EAA2B/E,EAA3B+E,UAAWC,EAAgBhF,EAAhBgF,YACbC,EAAUC,sBAEhB,EAA0DpG,oBAAS,GAAM,mBAAlEqG,EAAqB,KAAEC,EAAwB,KACtD,EAAsBtG,mBAAS,IAAG,mBAA3BuG,EAAG,KAAEC,EAAM,KA8ClB,OACI,eAACrE,EAAA,EAAO,CAACC,OAAK,YACV,cAAC,IAAU,CAACqE,MAAO/G,EAAE,aACrB,cAACyC,EAAA,EAAO,CAACC,OAAK,WACV,eAAC,IAAQ,CACLsE,IAAKP,EACLQ,WAAY,CACRd,MAAOe,IACP/C,OAAQ,CAAC,SAAU,IAAK,gBAE5BgD,aAAW,EACXC,iBAAe,EACfC,qBAAmB,EACnBC,iBAAe,EACfC,iBAAe,EACfC,oBAAkB,EAClBC,kBAAgB,EAChBC,qBAAmB,EACnBC,uBAAqB,EACrBC,YAAaC,IACbC,mBAtDW,SAAC5D,GACnBsC,EAAYuB,SACjB7D,EAAE8D,eAAeC,MAAMC,QAAQ,CAC3BC,SAAU,QACVC,OAAQ,WACRC,QAAS,CACLC,KAAM,cACNC,KAAMvI,EAAE,aACRuE,QAAQ,WAAD,sCAAE,8FACwE,KAAvEiE,EAAmB/B,EAAQgC,QAAQC,SAASC,sBAAwB,IACrDC,OAAO,CAAD,+BACjB1B,IAAc2B,SAAS,CAAEC,YAAY,EAAOC,SAAUP,IAAoB,KAAD,EAC/E/B,EAAQgC,QAAQO,UAAUC,UAAU,2CAE3C,kDANO,MAShB/E,EAAE8D,eAAeC,MAAMC,QAAQ,CAC3BC,SAAU,QACVC,OAAQ,WACRC,QAAS,CACLC,KAAM,YACNC,KAAMvI,EAAE,aACRuE,QAAQ,WAAD,sCAAE,8FACwE,KAAvEiE,EAAmB/B,EAAQgC,QAAQC,SAASC,sBAAwB,IACrDC,OAAO,CAAD,+BACjB1B,IAAc2B,SAAS,CAAEC,YAAY,EAAMC,SAAUP,IAAoB,KAAD,EAC9E/B,EAAQgC,QAAQO,UAAUC,UAAU,2CAE3C,kDANO,MASpB,EAuBgBC,UAAW,CAAEC,gBAAgB,EAAMC,KAAM,WAAYC,cAAe,OAAQC,mBAAoB,UAChGC,UAAW,CAAEC,aAAcC,KAAkB,UAE7C,cAAC,UAAO,CAACL,KAAK,aACd,cAAC,YAAS,CAACM,SAAO,IAClB,cAAC,cAAW,CAACA,SAAO,IACpB,cAAC,YAAS,CAACN,KAAK,aAChB,cAAC,cAAW,CAACM,SAAO,IACpB,cAAC,UAAO,CACJN,KAAK,QACLO,UAAQ,EACRC,cAAepD,EAAYuB,OAC3B8B,cAAerD,EAAYsD,OAC3BC,YAAavD,EAAYwD,IACzBC,YAAY,UAAS,SAGrB,cAAC,OAAI,UACD,eAAC,OAAI,CAACC,SAAS,QAAQC,SAAU,EAAGC,QAAS,EAAE,UAC3C,cAAC,OAAI,CAACC,UAAU,YAAYC,YAAU,IACtC,cAAC,OAAI,CAACD,UAAU,WAAWC,YAAU,IACrC,cAAC,OAAI,CAACD,UAAU,QAAQC,YAAU,IAClC,cAAC,OAAI,CAACD,UAAU,sBAChB,cAAC,OAAI,CAACA,UAAU,SAASC,YAAU,IACnC,cAAC,OAAI,CAACD,UAAU,cAChB,cAAC,OAAI,CAACA,UAAU,WAChB,cAAC,OAAI,CAACA,UAAU,cAChB,cAAC,OAAI,CAACA,UAAU,UAChB,cAAC,OAAI,CAACA,UAAU,oBAChB,cAAC,OAAI,CAACA,UAAU,qBAChB,cAAC,OAAI,CAACA,UAAU,eAChB,cAAC,OAAI,CAACA,UAAU,iBAChB,cAAC,OAAI,CAACA,UAAU,WAAWD,QAAS,EAAGG,cAAe,CAAEC,YAAa,uEACrE,cAAC,OAAI,CACDH,UAAU,QACVI,WAAW,aACXL,QAAS,EACTG,cAAe,CAAEG,OAAQ,cAMzC,cAAC,SAAM,CAACL,UAAU,YAAYM,QAAS3K,EAAE,eACzC,cAAC,SAAM,CAACqK,UAAU,WAAWM,QAAS3K,EAAE,cACxC,cAAC,SAAM,CAACqK,UAAU,QAAQM,QAAS3K,EAAE,WACrC,cAAC,SAAM,CAACqK,UAAU,SAASM,QAAS3K,EAAE,YACtC,cAAC,SAAM,CACH2K,QAAS3K,EAAE,gBACX4K,SAAS,UACTP,UAAU,oBACVzG,MAAO,MAEX,cAAC,SAAM,CAACyG,UAAU,YAAYM,QAAS3K,EAAE,WAAW,SAChD,cAAC,SAAM,CACHiH,WAAYV,EACZsE,UAAU,YACVC,YAAY,aAIpB,cAAC,SAAM,CAACT,UAAU,YAAYO,SAAS,OAAOD,QAAS3K,EAAE,eACzD,cAAC,SAAM,CAACqK,UAAU,SAASM,QAAS3K,EAAE,UAAU,SAC5C,cAAC,SAAM,CACHiH,WAAY,CAAC,OAAQ,cAG7B,cAAC,SAAM,CAACoD,UAAU,cAAcO,SAAS,WAAWD,QAAS3K,EAAE,gBAC/D,cAAC,SAAM,CAACqK,UAAU,QAAQO,SAAS,SAASD,QAAS3K,EAAE,WACvD,cAAC,SAAM,CAACqK,UAAU,QAAQM,QAAS3K,EAAE,WAErC,cAAC,SAAM,CACH2K,QAAS3K,EAAE,YACX4K,SAAS,UACTP,UAAU,aACVzG,MAAO,MAGX,cAAC,SAAM,CACH+G,QAAS3K,EAAE,cACX4K,SAAS,UACTP,UAAU,eACVzG,MAAO,MAGX,cAAC,SAAM,CACH+G,QAAS3K,EAAE,kBACX4K,SAAS,UACTP,UAAU,kBACVzG,MAAO,MAEX,cAAC,SAAM,CACH+G,QAAS3K,EAAE,mBACX4K,SAAS,UACTP,UAAU,mBACVzG,MAAO,MAGX,eAAC,SAAM,CAACmH,KAAK,UAAUJ,QAAS3K,EAAE,WAAW,UACzC,cAAC,SAAM,CAACgF,KAAK,SACb,cAAC,SAAM,CAACA,KAAK,cAGjB,cAAC,SAAM,CAACA,KAAK,cAAc+F,KAAK,UAAUJ,QAAS3K,EAAE,qBAAsBgL,WAAY,gBAAG/I,EAAI,EAAJA,KAAI,OAC1F,8BACI,cAAC6C,EAAA,EAAI,CAACE,KAAK,OACPD,MAAI,EACJL,MAAM,OACNH,QAAS,kBA7KL,SAACtC,GAC7B6E,EAAO,CAAC7E,IACR2E,GAAyB,EAC7B,CA0K2CqE,CAAwBhJ,EAAK,KAE9C,IAEV,cAAC,SAAM,CAACiJ,QAAS1E,EAAY2E,cAKrC,cAACC,EAAA,EAAK,CACFC,QAlLoB,WAC5BzE,GAAyB,GACzBE,EAAO,GACX,EAgLYwE,KAAM3E,EACNvD,QAASyD,EAAI,IAAM,cAAC,EAAsB,CAAC9G,OAAQ8G,EAAI,GAAG9G,SAC1DwL,WAAS,EACTC,OAAQxL,EAAE,qBACVyL,KAAK,QACLC,UAAQ,EACRC,oBAAoB,MAIpC,GAWyCzF,E,0GC7N1B0F,EADiBC,cAAiDC,IAAMC,gBAAkBD,IAAMpK,UCD3GsK,EAAyB,MA0C7B,IAAIC,EAAiB,IAAIC,IAMdC,EAAyB,SAAgCC,EAAMC,GACxE,IAAIC,EAxCC,SAA2BD,GAChC,IAAIE,EAAa,GAEjB,OAAIF,GACFA,EAAcG,SAAQ,SAAUC,GACM,kBAAzBA,EAAahE,SACCgE,EAAahE,QAAQiE,MAAMV,GACjCQ,SAAQ,SAAUG,GACjCJ,EAAWK,KAAKD,EAClB,GAEJ,IACOJ,EAAWpI,QAAO,SAAUwI,EAAWE,EAAGC,GAC/C,OAAOH,EAAU/D,OAAS,GAAKkE,EAAMC,QAAQJ,KAAeE,CAC9D,KAGK,EACT,CAsB0BG,CAAkBX,GAEtCY,EAhBC,SAAqChB,EAAgBK,GAC1D,MAAO,CAACA,EAAkBnI,QAAO,SAAUwI,GACzC,OAA8C,IAAvCV,EAAec,QAAQJ,EAChC,IAAIV,EAAe9H,QAAO,SAAUwI,GAClC,OAAiD,IAA1CL,EAAkBS,QAAQJ,EACnC,IACF,CAU8BO,CAA4BjB,EAAe9J,IAAIiK,IAAS,GAAIE,GACpFa,EAASF,EAAsB,GAC/BG,EAAaH,EAAsB,GAEnCb,IACFe,EAAOX,SAAQ,SAAUG,GACvB,OAAOP,EAAKiB,UAAUC,IAAIX,EAC5B,IACAS,EAAWZ,SAAQ,SAAUG,GAC3B,OAAOP,EAAKiB,UAAUE,OAAOZ,EAC/B,KAGFV,EAAeuB,IAAIpB,EAAME,EAC3B,EA0CImB,EAAe,IAzCO,WACxB,IAAIC,EAAQC,KAEZA,KAAKL,IAAM,SAAUlB,EAAMK,GACzB,GAAIiB,EAAME,MAAMC,IAAIzB,GAApB,CACasB,EAAME,MAAMzL,IAAIiK,GAEtBkB,IAAIb,EAGX,KANA,CASA,IAAIe,EAAM,IAAIM,IACdN,EAAIF,IAAIb,GAERiB,EAAME,MAAMJ,IAAIpB,EAAMoB,EANtB,CAOF,EAEAG,KAAKI,IAAM,SAAU3B,EAAMK,GACzB,GAAKiB,EAAME,MAAMC,IAAIzB,GAArB,CAIA,IAAIoB,EAAME,EAAME,MAAMzL,IAAIiK,GAET,IAAboB,EAAI/B,KAMR+B,EAAIQ,OAAOvB,GALTiB,EAAME,MAAMI,OAAO5B,EALrB,CAWF,EAEAuB,KAAKM,KAAO,SAAU7B,EAAM8B,GAC1BA,EAAS9B,EAAMsB,EAAME,MAAMzL,IAAIiK,GACjC,EAEAuB,KAAKC,MAAQ,IAAI1B,GACnB,EAUe,SAASiC,EAAoB/B,EAAMO,GAChD,IAAIF,EAAeX,IAAMsC,SACrBC,EAAYvC,IAAMsC,QAAO,GAC7BxC,GAA0B,WAGxB,GAFAa,EAAahE,QAAUkE,EAEnB0B,EAAU5F,QAAS,CACrB,IAAI6F,EAAUC,YAAYnC,GAAQA,EAAK3D,QAAU2D,EACjDqB,EAAaQ,KAAKK,EAASnC,EAC7B,CAEAkC,EAAU5F,SAAU,CACtB,GAAG,CAACkE,IACJf,GAA0B,WACxB,IAAI0C,EAAUC,YAAYnC,GAAQA,EAAK3D,QAAU2D,EAGjD,OAFAqB,EAAaH,IAAIgB,EAAS7B,GAC1BgB,EAAaQ,KAAKK,EAASnC,GACpB,WACLsB,EAAaM,IAAIO,EAAS7B,GAC1BgB,EAAaQ,KAAKK,EAASnC,EAC7B,CACF,GAAG,CAACC,GACN,C,mCC7IA,kEAMe,aAAClI,GAA6C,IAA1CsK,EAAW,uDAAG,GAAIC,EAAa,uDAAG,GAC3CC,EAAW,IAAIC,IAAQC,SACvBC,EAAYH,EAASI,aAAa5O,IAAQF,EAAE,aAElD+O,yBAAe,CACXC,UAAW9K,EAAE8K,UACbH,UAAWA,EACXI,cAAe,YAA8B,IAA3BC,EAAQ,EAARA,SAAUC,EAAS,EAATA,UAExB,GAAyB,SAArBD,EAASE,QAAoB,CAC7B,IAAMC,EAASZ,EAAc1K,MAAK,SAAAuL,GAAC,OAAIJ,EAASK,OAAOlF,YAAciF,EAAEtK,IAAI,IACvEqK,GAAUH,EAASzN,QACnB0N,EAAU1N,MAAQyN,EAASzN,MAAM6B,KAAI,SAAAkM,GAEjC,OADYH,EAAOpN,KAAK8B,MAAK,SAAA0L,GAAC,OAAIA,EAAEJ,EAAOK,cAAgBF,EAAEH,EAAOM,WAAW,IACpEN,EAAOO,YACtB,IAAGC,QAGHrB,EAAYzK,MAAK,SAAAuL,GAAC,OAAIJ,EAASK,OAAOlF,YAAciF,CAAC,MACrDH,EAAU1N,MAAQqO,qBAAWZ,EAASzN,MAAO,CAAEsO,SAAU,QAG3B,YAA9Bb,EAASK,OAAOlF,YAChB8E,EAAU1N,MAAQ,IAAIuO,KAAKd,EAASzN,OAAOwO,gBAEb,aAA9Bf,EAASK,OAAOlF,YAChB8E,EAAU1N,MAAQyN,EAASzN,MAAQvB,IAAQF,EAAE,OAASE,IAAQF,EAAE,MAExE,CACyB,UAArBkP,EAASE,UACTD,EAAUe,KAAO,CAAEnF,KAAM,UAAWoF,QAAS,QAASC,QAAS,CAAEC,KAAM,YAElD,gBAArBnB,EAASE,SAA6BD,EAAU1N,QAChD0N,EAAUmB,KAAKC,QAAS,EAEhC,IACDC,MAAK,WACJ9B,EAAS+B,KAAKC,cAAcF,MAAK,SAACG,GAC9BC,IAAO,IAAIC,KAAK,CAACF,GAAS,CAAE5F,KAAM,6BAA+B,gBACrE,GACJ,IACA7G,EAAE4M,QAAS,CACd,C,6QCnCGC,EAA4B,SAAUC,GAGxC,SAASD,IAGP,IAFA,IAAIrD,EAEKuD,EAAOC,UAAUtI,OAAQuI,EAAO,IAAIC,MAAMH,GAAOI,EAAO,EAAGA,EAAOJ,EAAMI,IAC/EF,EAAKE,GAAQH,UAAUG,GAezB,OAZA3D,EAAQsD,EAAWM,KAAKC,MAAMP,EAAY,CAACrD,MAAM6D,OAAOL,KAAUxD,MAE5D8D,sBAAwB,SAAUC,GACtC,MAAO,CACLnN,QAAS,SAAiBL,EAAGyN,GAC3BC,YAAQF,EAAiB,UAAWxN,EAAGyN,GAEvCC,YAAQlE,EAAMlM,MAAO,gBAAiB0C,EAAGyN,EAC3C,EAEJ,EAEOjE,CACT,CAqCA,OA3DAmE,YAAed,EAAcC,GAwBhBD,EAAae,UAEnBC,OAAS,WACd,IAAIC,EAASrE,KAETsE,EAActE,KAAKnM,MACnB0Q,EAAUD,EAAYC,QACtBC,EAAWF,EAAYE,SACvBxF,EAAYsF,EAAYtF,UACxBvJ,EAAU6O,EAAY7O,QACtBgP,EAAUC,YAAG,UAAW1F,GACxB2F,EAAOC,YAAkBxB,EAAcpD,KAAKnM,OAC5CgR,EAAcC,YAAe1B,EAAcpD,KAAKnM,OAEpD,OAAKkR,IAAcC,MAAMR,GAMpBO,IAAcC,MAAMvP,GAML0I,IAAM8G,cAAcJ,EAAaK,YAAS,CAAC,EAAGP,EAAM,CACtE3F,UAAWyF,IACTU,YAAKZ,GAAS,SAAUa,GAC1B,OAAOC,IAAOC,OAAOF,EAAQ,CAC3BG,cAAelB,EAAOP,uBAE1B,KAXsB3F,IAAM8G,cAAcJ,EAAaK,YAAS,CAAC,EAAGP,EAAM,CACtE3F,UAAWyF,IACThP,GARgB0I,IAAM8G,cAAcJ,EAAaK,YAAS,CAAC,EAAGP,EAAM,CACtE3F,UAAWyF,IACTD,EAgBR,EAEOpB,CACT,CA7DgC,CA6D9BoC,aCjEF,SAASC,EAAa5R,GACpB,IAAI2Q,EAAW3Q,EAAM2Q,SACjBxF,EAAYnL,EAAMmL,UAClBvJ,EAAU5B,EAAM4B,QAChBiQ,EAAQ7R,EAAM6R,MACdC,EAAY9R,EAAM8R,UAClBlB,EAAUC,YAAG1F,EAAW4G,YAAWF,EAAO,SAAUE,YAAWD,EAAW,aAAc,WACxFhB,EAAOC,YAAkBa,EAAc5R,GACvCgR,EAAcC,YAAeW,EAAc5R,GAC/C,OAAoBsK,IAAM8G,cAAcJ,EAAaK,YAAS,CAAC,EAAGP,EAAM,CACtE3F,UAAWyF,IACTM,IAAcC,MAAMR,GAAY/O,EAAU+O,EAChD,CDuDApB,EAAayC,aAAe,CAAC,UAAW,KAAM,WAAY,YAAa,UAAW,iBAElFzC,EAAa0C,UAuBT,CAAC,EACL1C,EAAakC,OAASS,YAAuB3C,GAAc,SAAUmB,GACnE,MAAO,CACLA,QAASA,EAEb,ICnFAkB,EAAaI,aAAe,CAAC,KAAM,WAAY,YAAa,UAAW,QAAS,aAChFJ,EAAaK,UAkBT,CAAC,EACLL,EAAaH,OAASS,YAAuBN,GAAc,SAAUhQ,GACnE,MAAO,CACLA,QAASA,EAEb,IACegQ,QCvCf,SAASO,EAAiBnS,GACxB,IAAI2Q,EAAW3Q,EAAM2Q,SACjBxF,EAAYnL,EAAMmL,UAClBvJ,EAAU5B,EAAM4B,QAChBgP,EAAUC,YAAG,cAAe1F,GAC5B2F,EAAOC,YAAkBoB,EAAkBnS,GAC3CgR,EAAcC,YAAekB,EAAkBnS,GACnD,OAAoBsK,IAAM8G,cAAcJ,EAAaK,YAAS,CAAC,EAAGP,EAAM,CACtE3F,UAAWyF,IACTM,IAAcC,MAAMR,GAAY/O,EAAU+O,EAChD,CAEAwB,EAAiBH,aAAe,CAAC,KAAM,WAAY,YAAa,WAChEG,EAAiBF,UAYb,CAAC,EACUE,Q,SCzBf,SAASC,EAAYpS,GACnB,IAAIqS,EAAWrS,EAAMqS,SACjB1B,EAAW3Q,EAAM2Q,SACjBxF,EAAYnL,EAAMmL,UAClBjB,EAAWlK,EAAMkK,SACjBtI,EAAU5B,EAAM4B,QAChB0Q,EAAWtS,EAAMsS,SACjBC,EAAYvS,EAAMuS,UAClBT,EAAY9R,EAAM8R,UAClBtM,EAAM8E,IAAMsC,SACZgE,EAAUC,YAAG,KAAMkB,YAAWO,EAAU,YAAaP,aAAY7H,EAAU,eAAgB,+CAAgDiB,GAC3IqH,EAAc3B,YAAG,kBAAmBkB,YAAWM,EAAU,YAAaN,YAAWD,EAAW,cAC5FhB,EAAOC,YAAkBqB,EAAapS,GACtCgR,EAAcC,YAAemB,EAAapS,GAO9C,OANA2M,YAAoB4F,EAAWC,GAC/BlI,IAAMpK,WAAU,WACVsF,EAAIyB,SAAWzB,EAAIyB,QAAQ9E,OAC7BqD,EAAIyB,QAAQ9E,MAAMsQ,YAAY,UAAW,OAAQ,YAErD,GAAG,IACiBnI,IAAM8G,cAAcsB,IAAK,CAC3CC,SAAUnN,GACI8E,IAAM8G,cAAcJ,EAAaK,YAAS,CAAC,EAAGP,EAAM,CAClE3F,UAAWyF,IACTM,IAAcC,MAAMR,GAAY/O,EAAU+O,GAChD,CAEAyB,EAAYJ,aAAe,CAAC,KAAM,WAAY,WAAY,WAAY,YAAa,UAAW,WAAY,YAAa,aACvHI,EAAYH,UA2BR,CAAC,EACLG,EAAYX,OAASS,YAAuBE,GAAa,SAAUxQ,GACjE,MAAO,CACLA,QAASA,EAEb,IACewQ,QC9Df,SAASQ,EAAY5S,GACnB,IAAI2Q,EAAW3Q,EAAM2Q,SACjBxF,EAAYnL,EAAMmL,UAClBvJ,EAAU5B,EAAM4B,QAChBgP,EAAUC,YAAG,SAAU1F,GACvB2F,EAAOC,YAAkB6B,EAAa5S,GACtCgR,EAAcC,YAAe2B,EAAa5S,GAC9C,OAAoBsK,IAAM8G,cAAcJ,EAAaK,YAAS,CAAC,EAAGP,EAAM,CACtE3F,UAAWyF,IACTM,IAAcC,MAAMR,GAAY/O,EAAU+O,EAChD,CAEAiC,EAAYZ,aAAe,CAAC,KAAM,WAAY,YAAa,WAC3DY,EAAYX,UAYR,CAAC,EACLW,EAAYnB,OAASS,YAAuBU,GAAa,SAAUhR,GACjE,MAAO,CACLA,QAASA,EAEb,IACegR,QC5BJC,EAAS,SAAgBC,GAIlC,IAAIC,EAAeD,EAAU5J,OAflB,EAiBPA,EAAS4J,EAAU5J,OAjBZ,EAmBP8J,EAAgBC,OAAOC,YAU3B,OATqBF,EAAgB,GACnB9J,EAAS,EAQJ6J,EA3BX,GA2B0CC,CACxD,EAWWG,EAAkB,SAAyBC,EAAUlJ,EAAU4I,GACxE,IAAIO,EAAYnJ,GAAYkJ,GAAaN,EAAU5J,OAAS,EAAK,EAEjE,MAAO,CACLoK,YAFiBR,EAAU1Q,MAAQ,EAGnCiR,UAAWA,EAEf,EAIWE,EAAW,WACpB,OAAQN,OAAOO,eAAiB,kBAAmBP,MACrD,EC3BIrJ,EAAqB,SAAU4F,GAGjC,SAAS5F,IAGP,IAFA,IAAIsC,EAEKuD,EAAOC,UAAUtI,OAAQuI,EAAO,IAAIC,MAAMH,GAAOI,EAAO,EAAGA,EAAOJ,EAAMI,IAC/EF,EAAKE,GAAQH,UAAUG,GA0KzB,OAvKA3D,EAAQsD,EAAWM,KAAKC,MAAMP,EAAY,CAACrD,MAAM6D,OAAOL,KAAUxD,MAC5DsH,OAASpJ,eAAekJ,IAC9BrH,EAAM1G,IAAmBN,sBACzBgH,EAAMwH,UAAyBxO,sBAC/BgH,EAAMyH,6BAA+B,KAErCzH,EAAM0H,aAAe,WACnB,OAAOvJ,cAAc6B,EAAMlM,MAAMuS,WAAasB,SAASC,KAAO,IAChE,EAEA5H,EAAM6H,uBAAyB,SAAU7D,GACvC,MAAO,CACL8D,cAAe,SAAuBtR,EAAGuR,GACvC7D,YAAQF,EAAiB,gBAAiBxN,EAAGuR,GAE7C7D,YAAQlE,EAAMlM,MAAO,gBAAiB0C,EAAGwJ,EAAMlM,OAE/CkM,EAAMgI,YAAYxR,EACpB,EAEJ,EAEAwJ,EAAMgI,YAAc,SAAUxR,GAC5BwJ,EAAMiI,SAAS,CACbrK,MAAM,IAGRsG,YAAQlE,EAAMlM,MAAO,UAAW0C,EAAG2O,YAAS,CAAC,EAAGnF,EAAMlM,MAAO,CAC3D8J,MAAM,IAEV,EAEAoC,EAAMkI,wBAA0B,SAAU1R,GACxCwJ,EAAMyH,6BAA+BjR,CACvC,EAEAwJ,EAAMmI,oBAAsB,SAAU3R,GACpC,IAAIyH,EAAqB+B,EAAMlM,MAAMmK,mBACjCmK,EAAgCpI,EAAMyH,6BAC1CzH,EAAMyH,6BAA+B,MAChCxJ,GAAsBoK,YAAqBrI,EAAM1G,IAAIyB,QAASqN,IAAkCC,YAAqBrI,EAAM1G,IAAIyB,QAASvE,KAE7IwJ,EAAMiI,SAAS,CACbrK,MAAM,IAGRsG,YAAQlE,EAAMlM,MAAO,UAAW0C,EAAG2O,YAAS,CAAC,EAAGnF,EAAMlM,MAAO,CAC3D8J,MAAM,KAEV,EAEAoC,EAAMsI,oBAAsB,SAAUtE,GACpC,MAAO,CACLnN,QAAS,SAAiBL,GACxB0N,YAAQF,EAAiB,UAAWxN,GAEpCwJ,EAAMgI,YAAYxR,EACpB,EAEJ,EAEAwJ,EAAMuI,WAAa,SAAU/R,GAC3B0N,YAAQlE,EAAMlM,MAAO,SAAU0C,EAAG2O,YAAS,CAAC,EAAGnF,EAAMlM,MAAO,CAC1D8J,MAAM,KAGRoC,EAAMiI,SAAS,CACbrK,MAAM,GAEV,EAEAoC,EAAMwI,kBAAoB,SAAUhS,GAClC,IAAIiS,EAAYzI,EAAMlM,MAAM2U,UAE5BzI,EAAMiI,SAAS,CACbrC,WAAW,IAGb5F,EAAM0I,2BAENC,IAAWC,IAAI,YAAa5I,EAAMkI,wBAAyB,CACzDW,KAAMJ,EACNK,OAAQ9I,EAAMwH,UAAUzM,UAE1B4N,IAAWC,IAAI,QAAS5I,EAAMmI,oBAAqB,CACjDU,KAAMJ,EACNK,OAAQ9I,EAAMwH,UAAUzM,UAG1BmJ,YAAQlE,EAAMlM,MAAO,UAAW0C,EAAGwJ,EAAMlM,MAC3C,EAEAkM,EAAM+I,oBAAsB,SAAUvS,GACpC,IAAIiS,EAAYzI,EAAMlM,MAAM2U,UAC5BO,qBAAqBhJ,EAAMiJ,oBAC3BN,IAAWO,MAAM,YAAalJ,EAAMkI,wBAAyB,CAC3DW,KAAMJ,EACNK,OAAQ9I,EAAMwH,UAAUzM,UAE1B4N,IAAWO,MAAM,QAASlJ,EAAMmI,oBAAqB,CACnDU,KAAMJ,EACNK,OAAQ9I,EAAMwH,UAAUzM,UAG1BmJ,YAAQlE,EAAMlM,MAAO,YAAa0C,EAAGwJ,EAAMlM,MAC7C,EAEAkM,EAAM0I,yBAA2B,WAC/B,IACI9C,EADA5H,EAAWgC,EAAMlM,MAAMkK,SAEvBmL,EAAW,CAAC,EAEhB,GAAInJ,EAAM1G,IAAIyB,QAAS,CACrB,IAAIqO,EAAOpJ,EAAM1G,IAAIyB,QAAQsO,wBAEzBnC,EAAWP,EAAOyC,GACtBxD,GAAasB,EAEb,IAAIoC,EAAetJ,EAAMuH,OAASN,EAAgBC,EAAUlJ,EAAUoL,GAAQ,CAAC,EAE1EG,IAAavJ,EAAMwJ,MAAMF,aAAcA,KAC1CH,EAASG,aAAeA,GAGtBtJ,EAAMwJ,MAAM5D,YAAcA,IAC5BuD,EAASvD,UAAYA,EAEzB,CAEK6D,YAASN,IAAWnJ,EAAMiI,SAASkB,GACxCnJ,EAAMiJ,mBAAqBS,sBAAsB1J,EAAM0I,yBACzD,EAEA1I,EAAM2J,cAAgB,SAAU/E,GAC9B,IAAIL,EAAcvE,EAAMlM,MACpB0Q,EAAUD,EAAYC,QACtBxP,EAAQuP,EAAYvP,MACpByP,EAAWF,EAAYE,SACvBxF,EAAYsF,EAAYtF,UACxBpB,EAAY0G,EAAY1G,UACxBnI,EAAU6O,EAAY7O,QACtBoI,EAASyG,EAAYzG,OACrBC,EAAOwG,EAAYxG,KACnB9H,EAAQsO,EAAYtO,MACpB2T,EAAc5J,EAAMwJ,MACpBF,EAAeM,EAAYN,aAC3B1D,EAAYgE,EAAYhE,UACxBlB,EAAUC,YAAG,KAAM5G,EAAM8H,YAAW7Q,EAAO,SAAU6Q,YAAW7F,EAAMuH,OAAQ,UAAW1B,YAAWD,EAAW,aAAc,kCAAmC3G,GAChK6F,EAAcC,YAAerH,EAAOsC,EAAMlM,OAC1C+V,GAA8B,IAAdhM,EAAqB,QAAUA,EAC/CiM,EAAe1S,IAAKmO,OAAOsE,EAAe,CAC5CrE,cAAexF,EAAMsI,sBAEvB,OAAoBlK,IAAM8G,cAAcsB,IAAK,CAC3CC,SAAUzG,EAAM1G,KACF8E,IAAM8G,cAAcJ,EAAaK,YAAS,CAAC,EAAGP,EAAM,CAClE3F,UAAWyF,EACXzO,MAAOkP,YAAS,CAAC,EAAGmE,EAAcrT,KAChC6T,EAAc9E,IAAcC,MAAMR,GAAyBrG,IAAM8G,cAAc9G,IAAM2L,SAAU,KAAMrD,EAAYnB,OAAOzH,EAAQ,CAClIkM,iBAAiB,IACftE,EAAaH,OAAO7P,EAAS,CAC/BsU,iBAAiB,IACf3G,EAAakC,OAAOf,EAAS,CAC/BgB,cAAexF,EAAM6H,0BACjBpD,GACR,EAEOzE,CACT,CAjLAmE,YAAezG,EAAO4F,GAmLtB,IAAI2G,EAASvM,EAAM0G,UAuEnB,OArEA6F,EAAOC,qBAAuB,WAC5BjK,KAAK8I,qBACP,EAGAkB,EAAO5F,OAAS,WACd,IAAI8F,EAAelK,KAAKnM,MACpBkK,EAAWmM,EAAanM,SACxBoM,EAAuBD,EAAaC,qBACpCC,EAASF,EAAaE,OACtB5B,EAAY0B,EAAa1B,UACzB6B,EAAUH,EAAaG,QACvBC,EAAetK,KAAKuJ,MACpB5L,EAAO2M,EAAa3M,KACpBgI,EAAY2E,EAAa3E,UACzBS,EAAYpG,KAAKyH,eAErB,IAAKvJ,cACH,OAAoBqM,yBAAeF,GAAWA,EAAU,KAG1D,IAAIG,EAAY5F,YAAkBnH,EAAOuC,KAAKnM,OAC1C4W,EAAkBC,IAAO7E,aAEzBlB,EAAOgG,YAAQH,GAAW,SAAUI,EAAKC,EAAKC,GAEhD,OADKC,YAAUN,EAAiBK,KAAMF,EAAIE,GAAOD,GAC1CD,CACT,GAAG,CAAC,GAEAI,EAAcC,YAAMT,EAAWC,GAYnC,OAAoBtM,IAAM8G,cAAcyF,IAAQxF,YAAS,CACvDiF,qBAAsBA,GACrBa,EAAa,CACdX,QAASA,EACT7B,UAAWA,EACXpC,UAAWA,EACXzI,KAAMA,EACND,QAASsC,KAAK+H,YACdmD,QAASlL,KAAKuI,kBACd4C,OAAQnL,KAAKsI,WACb8C,UAAWpL,KAAK8I,sBACD3K,IAAM8G,cAAcsB,IAAK,CACxCC,SAAUxG,KAAKuH,WACdtB,EAAYX,OAAO+F,YAAejB,GAAUA,EAAS,CAAC,EAAG,CAC1DL,iBAAiB,EACjBuB,aAAc,CACZpF,SAAqB,aAAXkE,EACVjE,SAAqB,aAAXiE,GAEZ7E,cAAe,CACbf,SAAUxE,KAAK0J,cAAc/E,GAC7B5G,SAAUA,EACVqI,UAAWA,EACXT,UAAWA,MAGjB,EAEOlI,CACT,CA5PyB,CA4PvB+H,KAEF/H,EAAMoI,aAAe,CAAC,UAAW,KAAM,QAAS,WAAY,WAAY,YAAa,YAAa,qBAAsB,uBAAwB,UAAW,cAAe,SAAU,YAAa,SAAU,YAAa,gBAAiB,UAAW,UAAW,SAAU,YAAa,OAAQ,OAAQ,QAAS,WAC/SpI,EAAMqI,UAsGF,CAAC,EACLrI,EAAM6N,aAAe,CACnBvN,UAAU,EACVqM,QAAQ,EACRpM,oBAAoB,EACpBmM,sBAAsB,EACtB3B,UAAW,SAEb/K,EAAM8N,oBAAsB,CAAC,QAC7B9N,EAAM+N,QAAUpI,EAChB3F,EAAMgO,QAAUhG,EAChBhI,EAAMiO,YAAc1F,EACpBvI,EAAMkO,OAAS1F,EACfxI,EAAMlI,OAASkR,EACAhJ,K","file":"static/js/10.f4daac79.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Checkbox, Segment, Form, Divider, Grid, GridColumn, Header, Icon } from 'semantic-ui-react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport i18next from 'i18next';\r\nimport { categoriesDataLookup, brandsDataLookup, productsDataLookup } from '../../../Data Stores';\r\nimport request from '../../../api';\r\nimport { ErrorSegment } from '../../../components';\r\nimport { Styles } from '../../../res';\r\n\r\nconst PreferredProductsModal = ({ idUser, t }) => {\r\n    const isArabic = i18next.language === 'ar';\r\n    const { noExtraSpaces } = Styles;\r\n    const [categories, setCategories] = useState([]);\r\n    const [brands, setBrands] = useState([]);\r\n    const [products, setProducts] = useState([]);\r\n    const [preferredCategories, setPreferredCategories] = useState([]);\r\n    const [selectedPath, setSelectedPath] = useState({ categoryId: null, brandId: null });\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [saveLoading, setSaveLoading] = useState(false);\r\n\r\n    const handlePath = ({ props, value }) => {\r\n        setSelectedPath({ ...selectedPath, brandId: null, [props]: value });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        getCategories();\r\n        getBrands();\r\n        getProducts();\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    const getCategories = async () => {\r\n        setLoading(true);\r\n        try {\r\n            const { data: apps } = await categoriesDataLookup.load();\r\n            const { data: { data: prefsApps } } = await request.get(`/admin/users/cares/full`, { params: { idUser } });\r\n            setCategories(apps);\r\n            setPreferredCategories(prefsApps);\r\n            handlePath({ props: 'categoryId', value: apps[0]?.idCategory });\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const getBrands = async () => {\r\n        try {\r\n            const { data } = await brandsDataLookup.load();\r\n            setBrands(data);\r\n        } catch (err) {\r\n            setError(err);\r\n        }\r\n    };\r\n\r\n    const getProducts = async () => {\r\n        try {\r\n            const { data } = await productsDataLookup.load();\r\n            setProducts(data);\r\n        } catch (err) {\r\n            setError(err);\r\n        }\r\n\r\n    };\r\n\r\n    const resetPreferredCategories = async () => {\r\n        setSaveLoading(true);\r\n        try {\r\n            await request.post('/admin/aw/customer/preferences/reset', { idUser, categoriesIds: deleteUnnecessaryNodes() });\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setSaveLoading(false);\r\n        }\r\n    };\r\n\r\n    const onSelectAll = () => {\r\n        if (preferredCategories.length) setPreferredCategories([]);\r\n        else {\r\n            setPreferredCategories([]);\r\n            let apps = [];\r\n            for (let i = 0; i < categories.length; i++)\r\n                apps.push({ idUser, categoryId: categories[i].idCategory, brandId: null, productId: null });\r\n            setPreferredCategories(apps);\r\n        }\r\n    };\r\n\r\n    const onCategoryToggle = (app) => {\r\n        if (preferredCategories.find(p => p.categoryId === app.idCategory))\r\n            setPreferredCategories(preferredCategories.filter(p => p.categoryId !== app.idCategory));\r\n        else setPreferredCategories([...preferredCategories, { idUser, categoryId: app.idCategory, brandId: null, productId: null }]);\r\n    };\r\n\r\n    const onBrandToggle = (fam) => {\r\n        const findFamily = preferredCategories.findIndex(p => p.categoryId === selectedPath.categoryId && p.brandId === fam.idBrand);\r\n        if (findFamily !== -1) {\r\n            const toRemove = preferredCategories.filter(p => p.categoryId === selectedPath.categoryId && p.brandId === fam.idBrand);\r\n            setPreferredCategories(preferredCategories.filter(p => !toRemove.includes(p)));\r\n        }\r\n        else setPreferredCategories([...preferredCategories, { idUser, categoryId: selectedPath.categoryId, brandId: fam.idBrand, productId: null }]);\r\n    };\r\n\r\n    const onProductToggle = (qul) => {\r\n        const findQuality = preferredCategories.findIndex(p => p.categoryId === selectedPath.categoryId && p.brandId === selectedPath.brandId && p.productId === qul.idProduct);\r\n        if (findQuality !== -1) {\r\n            const temp = [...preferredCategories];\r\n            temp.splice(findQuality, 1);\r\n            setPreferredCategories(temp);\r\n        }\r\n        else setPreferredCategories([...preferredCategories, { idUser, categoryId: selectedPath.categoryId, brandId: selectedPath.brandId, productId: qul.idProduct }]);\r\n    };\r\n\r\n\r\n    const deleteUnnecessaryNodes = () => {\r\n        const data = [...preferredCategories];\r\n        const categoryParentsNodes = data.filter(p => p.categoryId && !p.brandId);\r\n\r\n        for (let i = 0; i < categoryParentsNodes.length; i++) {\r\n            const childFound = data.find(p => p.categoryId === categoryParentsNodes[i].categoryId && p.brandId);\r\n            const parIndex = data.findIndex(p => p.categoryId === categoryParentsNodes[i].categoryId && !p.brandId);\r\n            if (childFound) {\r\n                data.splice(parIndex, 1);\r\n            }\r\n        }\r\n\r\n        const familyParentsNodes = data.filter(p => p.categoryId && p.brandId && !p.productId);\r\n        for (let i = 0; i < familyParentsNodes.length; i++) {\r\n            const childFound = data.find(p => p.categoryId === familyParentsNodes[i].categoryId && p.brandId === familyParentsNodes[i].brandId && p.productId);\r\n            const parIndex = data.findIndex(p => p.categoryId === familyParentsNodes[i].categoryId && p.brandId === familyParentsNodes[i].brandId && !p.productId);\r\n            if (childFound) {\r\n                data.splice(parIndex, 1);\r\n            }\r\n        }\r\n        return data;\r\n    };\r\n\r\n    if (loading) return <Segment basic padded loading={loading} />;\r\n    if (error) return <ErrorSegment />;\r\n\r\n    return (\r\n        <Segment basic>\r\n            <Grid columns='equal' stretched verticalAlign='top' divided>\r\n                <GridColumn>\r\n                    {/* <Checkbox\r\n                        indeterminate={categories.map(a => a.idCategory).some(ap => preferredCategories.map(a => a.categoryId).includes(ap)) && !categories.map(a => a.idCategory).every(ap => preferredCategories.map(a => a.categoryId).includes(ap))}\r\n                        checked={categories.map(a => a.idCategory).every(ap => preferredCategories.map(a => a.categoryId).includes(ap))}\r\n                        onChange={onSelectAll}\r\n                        label={t('SelectAll')}\r\n                    /> */}\r\n                    <Header as='h5' content={t(\"Categories\")} />\r\n                    <Form>\r\n                        {\r\n                            categories.map((app, indx) => {\r\n                                const isSelectedApplication = selectedPath.categoryId === app.idCategory;\r\n                                return <Form.Field key={indx} style={noExtraSpaces}>\r\n                                    <Grid columns='2' >\r\n                                        <GridColumn width='2'>\r\n                                            <Checkbox\r\n                                                checked={!!preferredCategories.find(p => p.categoryId === app.idCategory)}\r\n                                                onChange={(e, { checked }) => {\r\n                                                    onCategoryToggle(app);\r\n                                                    if (checked)\r\n                                                        handlePath({ props: \"categoryId\", value: app.idCategory });\r\n                                                }}\r\n                                                disabled\r\n                                            />\r\n                                        </GridColumn>\r\n\r\n                                        <GridColumn width='14'>\r\n                                            <div\r\n                                                onClick={() => handlePath({ props: \"categoryId\", value: app.idCategory })}\r\n                                                style={{ display: 'flex', justifyContent: 'space-between', color: isSelectedApplication ? 'blue' : 'black', cursor: \"pointer\" }}\r\n                                            >\r\n                                                <label style={{ cursor: \"pointer\" }}>{isArabic ? app.nameAr : app.nameEn}</label>\r\n                                                <Icon\r\n                                                    link\r\n                                                    name={isSelectedApplication ? 'chevron right' : 'chevron down'}\r\n                                                    color={isSelectedApplication ? 'blue' : 'black'}\r\n                                                />\r\n                                            </div>\r\n                                        </GridColumn>\r\n                                    </Grid>\r\n                                </Form.Field>;\r\n                            })\r\n                        }\r\n                    </Form>\r\n                </GridColumn>\r\n\r\n                <GridColumn>\r\n                    <Header as='h5' content={t(\"Brands\")} />\r\n                    <Form>\r\n                        {\r\n                            brands.filter(b => b.categoryId === selectedPath.categoryId).map((fam, indx) => {\r\n                                const isSelectedFamily = selectedPath.brandId === fam.idBrand;\r\n                                return <Form.Field key={indx} style={noExtraSpaces}>\r\n                                    <Grid columns='2'>\r\n                                        <GridColumn width='2'>\r\n                                            <Checkbox\r\n                                                checked={!!preferredCategories.filter(p => p.categoryId === selectedPath.categoryId).find(fa => fa.brandId === fam.idBrand)}\r\n                                                onChange={(e, { checked }) => {\r\n                                                    onBrandToggle(fam);\r\n                                                    if (checked)\r\n                                                        handlePath({ props: \"brandId\", value: fam.idBrand });\r\n                                                }}\r\n                                                // disabled={!selectedPath.categoryId || !preferredCategories.find(ap => ap.categoryId === selectedPath.categoryId)}\r\n                                                disabled\r\n                                            />\r\n                                        </GridColumn>\r\n                                        <GridColumn width='14'>\r\n                                            <div\r\n                                                onClick={() => handlePath({ props: \"brandId\", value: fam.idBrand })}\r\n                                                style={{ display: 'flex', justifyContent: 'space-between', color: isSelectedFamily ? 'blue' : 'black', cursor: \"pointer\" }}\r\n                                            >\r\n                                                <label style={{ cursor: \"pointer\" }}>{isArabic ? fam.nameAr : fam.nameEn}</label>\r\n                                                <Icon\r\n                                                    link\r\n                                                    name={isSelectedFamily ? 'chevron right' : 'chevron down'}\r\n                                                    color={isSelectedFamily ? 'blue' : 'black'}\r\n                                                />\r\n                                            </div>\r\n                                        </GridColumn>\r\n                                    </Grid>\r\n                                </Form.Field>;\r\n                            })\r\n                        }\r\n                    </Form>\r\n                </GridColumn>\r\n\r\n                <GridColumn>\r\n                    <Header as='h5' content={t(\"Products\")} />\r\n                    <Form>\r\n                        {\r\n                            products.filter(p => p.brandId === selectedPath.brandId).map((qul, indx) => <Form.Field key={indx} >\r\n                                <Checkbox\r\n                                    label={isArabic ? qul.nameAr : qul.nameEn}\r\n                                    checked={!!preferredCategories.filter(p => p.categoryId === selectedPath.categoryId && p.brandId === selectedPath.brandId).find(q => q.productId === qul.idProduct)}\r\n                                    onChange={() => onProductToggle(qul)}\r\n                                    // disabled={!selectedPath.brandId || !preferredCategories.find(p => p.categoryId === selectedPath.categoryId && p.brandId === selectedPath.brandId)}\r\n                                    disabled\r\n                                />\r\n                            </Form.Field>)\r\n                        }\r\n                    </Form>\r\n                </GridColumn>\r\n            </Grid>\r\n\r\n            {/* <Divider hidden />\r\n            <Button fluid loading={saveLoading} positive icon='save' labelPosition='left' content={t('Save')} onClick={resetPreferredCategories} /> */}\r\n        </Segment>\r\n    );\r\n};\r\n\r\nexport default withTranslation()(PreferredProductsModal);","import React, { useState, createRef } from 'react';\r\nimport { Icon, Modal, Segment } from 'semantic-ui-react';\r\nimport DataGrid, { Column, Editing, Button, FilterPanel, FilterRow, Form, Scrolling, SearchPanel, Lookup, Sorting, Export } from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/ui/form';\r\nimport 'devextreme-react/ui/text-area';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { PageHeader } from '../../../components';\r\nimport { usersDataGrid, companiesDataLookup } from '../../../Data Stores';\r\nimport LoadingGifImage from '../../../res/images/loading.gif';\r\nimport datagridExporter from '../../../helpers/datagridExporter';\r\nimport { RequireFetchData } from '../../../middlewares/HOC';\r\nimport PreferredProductsModal from './PreferredProductsModal';\r\n\r\nconst Clients = (props) => {\r\n    const { t } = useTranslation();\r\n    const { companies, PERMISSIONS } = props;\r\n    const gridRef = createRef();\r\n\r\n    const [showPreferredProducts, setShowPreferredProducts] = useState(false);\r\n    const [row, setRow] = useState([]);\r\n\r\n    const onShowPreferredProducts = (data) => {\r\n        setRow([data]);\r\n        setShowPreferredProducts(true);\r\n    };\r\n\r\n    const onHidePreferredProducts = () => {\r\n        setShowPreferredProducts(false);\r\n        setRow([]);\r\n    };\r\n\r\n    const onToolbarPreparing = (e) => {\r\n        if (!PERMISSIONS.UPDATE) return;\r\n        e.toolbarOptions.items.unshift({\r\n            location: 'after',\r\n            widget: 'dxButton',\r\n            options: {\r\n                icon: \"unselectall\",\r\n                hint: t('RejectAll'),\r\n                onClick: async () => {\r\n                    const selectedBranches = gridRef.current.instance.getSelectedRowKeys() || [];\r\n                    if (selectedBranches.length) {\r\n                        await usersDataGrid.activate({ isAccepted: false, usersIds: selectedBranches });\r\n                        gridRef.current._instance.refresh();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        e.toolbarOptions.items.unshift({\r\n            location: 'after',\r\n            widget: 'dxButton',\r\n            options: {\r\n                icon: \"selectall\",\r\n                hint: t('AcceptAll'),\r\n                onClick: async () => {\r\n                    const selectedBranches = gridRef.current.instance.getSelectedRowKeys() || [];\r\n                    if (selectedBranches.length) {\r\n                        await usersDataGrid.activate({ isAccepted: true, usersIds: selectedBranches });\r\n                        gridRef.current._instance.refresh();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Segment basic>\r\n            <PageHeader title={t('Clinets')} />\r\n            <Segment basic>\r\n                <DataGrid\r\n                    ref={gridRef}\r\n                    dataSource={{\r\n                        store: usersDataGrid,\r\n                        filter: ['roleId', '=', 'NORMAL_USER']\r\n                    }}\r\n                    showBorders\r\n                    showColumnLines\r\n                    columnHidingEnabled\r\n                    wordWrapEnabled\r\n                    columnAutoWidth\r\n                    repaintChangesOnly\r\n                    remoteOperations\r\n                    allowColumnResizing\r\n                    allowColumnReordering\r\n                    onExporting={datagridExporter}\r\n                    onToolbarPreparing={onToolbarPreparing}\r\n                    selection={{ allowSelectAll: true, mode: 'multiple', selectAllMode: 'page', showCheckBoxesMode: 'always' }}\r\n                    loadPanel={{ indicatorSrc: LoadingGifImage }}\r\n                >\r\n                    <Sorting mode='multiple' />\r\n                    <FilterRow visible />\r\n                    <FilterPanel visible />\r\n                    <Scrolling mode=\"infinite\" />\r\n                    <SearchPanel visible />\r\n                    <Editing\r\n                        mode='popup'\r\n                        useIcons\r\n                        allowUpdating={PERMISSIONS.UPDATE}\r\n                        allowDeleting={PERMISSIONS.DELETE}\r\n                        allowAdding={PERMISSIONS.ADD}\r\n                        refreshMode='reshape'\r\n                    >\r\n\r\n                        <Form>\r\n                            <Item itemType=\"group\" colCount={2} colSpan={2}>\r\n                                <Item dataField=\"firstName\" isRequired />\r\n                                <Item dataField=\"lastName\" isRequired />\r\n                                <Item dataField=\"email\" isRequired />\r\n                                <Item dataField=\"hasMobileWhatsapp\" />\r\n                                <Item dataField=\"mobile\" isRequired />\r\n                                <Item dataField=\"birthDate\" />\r\n                                <Item dataField=\"gender\" />\r\n                                <Item dataField=\"companyId\" />\r\n                                <Item dataField=\"score\" />\r\n                                <Item dataField=\"isEmailVerified\" />\r\n                                <Item dataField=\"isMobileVerified\" />\r\n                                <Item dataField=\"isAccepted\" />\r\n                                <Item dataField=\"isAuthorized\" />\r\n                                <Item dataField=\"password\" colSpan={2} editorOptions={{ placeholder: 'If you fill this field the password of the client will be changed' }} />\r\n                                <Item\r\n                                    dataField=\"notes\"\r\n                                    editorType=\"dxTextArea\"\r\n                                    colSpan={2}\r\n                                    editorOptions={{ height: 100 }} />\r\n                            </Item>\r\n                        </Form>\r\n                    </Editing>\r\n\r\n\r\n                    <Column dataField=\"firstName\" caption={t('FirstName')} />\r\n                    <Column dataField=\"lastName\" caption={t('LastName')} />\r\n                    <Column dataField=\"email\" caption={t('Email')} />\r\n                    <Column dataField=\"mobile\" caption={t('Mobile')} />\r\n                    <Column\r\n                        caption={t('Has WhatsApp')}\r\n                        dataType=\"boolean\"\r\n                        dataField='hasMobileWhatsapp'\r\n                        width={100}\r\n                    />\r\n                    <Column dataField=\"companyId\" caption={t('Company')}>\r\n                        <Lookup\r\n                            dataSource={companies}\r\n                            valueExpr=\"idCompany\"\r\n                            displayExpr=\"nameEn\"\r\n                        />\r\n                    </Column>\r\n\r\n                    <Column dataField=\"birthDate\" dataType='date' caption={t(\"Birthdate\")} />\r\n                    <Column dataField='gender' caption={t('Gander')} >\r\n                        <Lookup\r\n                            dataSource={['Male', 'Female']}\r\n                        />\r\n                    </Column>\r\n                    <Column dataField=\"lastLoginAt\" dataType='datetime' caption={t(\"Last Login\")} />\r\n                    <Column dataField=\"score\" dataType='number' caption={t('Score')} />\r\n                    <Column dataField='notes' caption={t('Notes')} />\r\n\r\n                    <Column\r\n                        caption={t('Accepted')}\r\n                        dataType=\"boolean\"\r\n                        dataField='isAccepted'\r\n                        width={100}\r\n                    />\r\n\r\n                    <Column\r\n                        caption={t('Authorized')}\r\n                        dataType=\"boolean\"\r\n                        dataField='isAuthorized'\r\n                        width={100}\r\n                    />\r\n\r\n                    <Column\r\n                        caption={t('Verified Email')}\r\n                        dataType=\"boolean\"\r\n                        dataField='isEmailVerified'\r\n                        width={100}\r\n                    />\r\n                    <Column\r\n                        caption={t('Verified Mobile')}\r\n                        dataType=\"boolean\"\r\n                        dataField='isMobileVerified'\r\n                        width={100}\r\n                    />\r\n\r\n                    <Column type=\"buttons\" caption={t('Actions')}>\r\n                        <Button name=\"edit\" />\r\n                        <Button name=\"delete\" />\r\n                    </Column>\r\n\r\n                    <Column name='moreButtons' type=\"buttons\" caption={t('PreferredProducts')} cellRender={({ data }) =>\r\n                        <div>\r\n                            <Icon name='list'\r\n                                link\r\n                                color='blue'\r\n                                onClick={() => onShowPreferredProducts(data)}\r\n                            />\r\n                        </div>\r\n                    } />\r\n                    <Export enabled={PERMISSIONS.EXPORT} />\r\n                </DataGrid>\r\n            </Segment>\r\n\r\n\r\n            <Modal\r\n                onClose={onHidePreferredProducts}\r\n                open={showPreferredProducts}\r\n                content={row[0] && <PreferredProductsModal idUser={row[0].idUser} />}\r\n                closeIcon\r\n                header={t('PreferredProducts')}\r\n                size='large'\r\n                centered\r\n                closeOnDimmerClick={false}\r\n            />\r\n        </Segment>\r\n    );\r\n};\r\n\r\nconst DS = [\r\n\r\n    {\r\n        store: companiesDataLookup,\r\n        name: 'companies'\r\n\r\n    }\r\n];\r\n\r\nexport default RequireFetchData(Clients, DS);\r\n","import React from 'react';\nimport isBrowser from '../isBrowser'; // useLayoutEffect() produces a warning with SSR rendering\n// https://medium.com/@alexandereardon/uselayouteffect-and-ssr-192986cdcf7a\n\nvar useIsomorphicLayoutEffect = isBrowser() && process.env.NODE_ENV !== 'test' ? React.useLayoutEffect : React.useEffect;\nexport default useIsomorphicLayoutEffect;","import { isRefObject } from '@fluentui/react-component-ref';\nimport React from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nvar CLASS_NAME_DELITIMITER = /\\s+/;\n/**\n * Accepts a set of ref objects that contain classnames as a string and returns an array of unique\n * classNames.\n *\n * @param {Set<React.RefObject>|undefined} classNameRefs\n * @returns String[]\n */\n\nexport function computeClassNames(classNameRefs) {\n  var classNames = [];\n\n  if (classNameRefs) {\n    classNameRefs.forEach(function (classNameRef) {\n      if (typeof classNameRef.current === 'string') {\n        var classNamesForRef = classNameRef.current.split(CLASS_NAME_DELITIMITER);\n        classNamesForRef.forEach(function (className) {\n          classNames.push(className);\n        });\n      }\n    });\n    return classNames.filter(function (className, i, array) {\n      return className.length > 0 && array.indexOf(className) === i;\n    });\n  }\n\n  return [];\n}\n/**\n * Computes classnames that should be removed and added to a node based on input differences.\n *\n * @param {String[]} prevClassNames\n * @param {String[]} currentClassNames\n */\n\nexport function computeClassNamesDifference(prevClassNames, currentClassNames) {\n  return [currentClassNames.filter(function (className) {\n    return prevClassNames.indexOf(className) === -1;\n  }), prevClassNames.filter(function (className) {\n    return currentClassNames.indexOf(className) === -1;\n  })];\n}\nvar prevClassNames = new Map();\n/**\n * @param {HTMLElement} node\n * @param {Set<React.RefObject>|undefined} classNameRefs\n */\n\nexport var handleClassNamesChange = function handleClassNamesChange(node, classNameRefs) {\n  var currentClassNames = computeClassNames(classNameRefs);\n\n  var _computeClassNamesDif = computeClassNamesDifference(prevClassNames.get(node) || [], currentClassNames),\n      forAdd = _computeClassNamesDif[0],\n      forRemoval = _computeClassNamesDif[1];\n\n  if (node) {\n    forAdd.forEach(function (className) {\n      return node.classList.add(className);\n    });\n    forRemoval.forEach(function (className) {\n      return node.classList.remove(className);\n    });\n  }\n\n  prevClassNames.set(node, currentClassNames);\n};\nexport var NodeRegistry = function NodeRegistry() {\n  var _this = this;\n\n  this.add = function (node, classNameRef) {\n    if (_this.nodes.has(node)) {\n      var _set = _this.nodes.get(node);\n\n      _set.add(classNameRef);\n\n      return;\n    } // IE11 does not support constructor params\n\n\n    var set = new Set();\n    set.add(classNameRef);\n\n    _this.nodes.set(node, set);\n  };\n\n  this.del = function (node, classNameRef) {\n    if (!_this.nodes.has(node)) {\n      return;\n    }\n\n    var set = _this.nodes.get(node);\n\n    if (set.size === 1) {\n      _this.nodes.delete(node);\n\n      return;\n    }\n\n    set.delete(classNameRef);\n  };\n\n  this.emit = function (node, callback) {\n    callback(node, _this.nodes.get(node));\n  };\n\n  this.nodes = new Map();\n};\nvar nodeRegistry = new NodeRegistry();\n/**\n * A React hooks that allows to manage classNames on a DOM node in declarative manner. Accepts\n * a HTML element or React ref objects with it.\n *\n * @param {HTMLElement|React.RefObject} node\n * @param {String} className\n */\n\nexport default function useClassNamesOnNode(node, className) {\n  var classNameRef = React.useRef();\n  var isMounted = React.useRef(false);\n  useIsomorphicLayoutEffect(function () {\n    classNameRef.current = className;\n\n    if (isMounted.current) {\n      var element = isRefObject(node) ? node.current : node;\n      nodeRegistry.emit(element, handleClassNamesChange);\n    }\n\n    isMounted.current = true;\n  }, [className]);\n  useIsomorphicLayoutEffect(function () {\n    var element = isRefObject(node) ? node.current : node;\n    nodeRegistry.add(element, classNameRef);\n    nodeRegistry.emit(element, handleClassNamesChange);\n    return function () {\n      nodeRegistry.del(element, classNameRef);\n      nodeRegistry.emit(element, handleClassNamesChange);\n    };\n  }, [node]);\n}","import { exportDataGrid } from 'devextreme/exporter/exceljs/export_data_grid';\r\nimport { htmlToText } from 'html-to-text';\r\nimport i18next from 'i18next';\r\nimport saveAs from 'file-saver';\r\nimport ExcelJS from 'exceljs';\r\n\r\nexport default (e, htmlColumns = [], objectColumns = []) => {\r\n    const workbook = new ExcelJS.Workbook();\r\n    const worksheet = workbook.addWorksheet(i18next.t('DataGrid'));\r\n\r\n    exportDataGrid({\r\n        component: e.component,\r\n        worksheet: worksheet,\r\n        customizeCell: ({ gridCell, excelCell }) => {\r\n\r\n            if (gridCell.rowType === 'data') {\r\n                const objCol = objectColumns.find(c => gridCell.column.dataField === c.name);\r\n                if (objCol && gridCell.value) {\r\n                    excelCell.value = gridCell.value.map(v => {\r\n                        const res = objCol.data.find(d => d[objCol.fieldName1] === v[objCol.fieldName2]);\r\n                        return res[objCol.displayName];\r\n                    }).join();\r\n                }\r\n\r\n                if (htmlColumns.find(c => gridCell.column.dataField === c)) {\r\n                    excelCell.value = htmlToText(gridCell.value, { wordwrap: null });\r\n                }\r\n\r\n                if (gridCell.column.dataField === 'creatAt') {\r\n                    excelCell.value = new Date(gridCell.value).toDateString();\r\n                }\r\n                if (gridCell.column.dataField === 'isActive') {\r\n                    excelCell.value = gridCell.value ? i18next.t('YES') : i18next.t('NO');\r\n                }\r\n            }\r\n            if (gridCell.rowType === 'group') {\r\n                excelCell.fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'BEDFE6' } };\r\n            }\r\n            if (gridCell.rowType === 'totalFooter' && excelCell.value) {\r\n                excelCell.font.italic = true;\r\n            }\r\n        }\r\n    }).then(() => {\r\n        workbook.xlsx.writeBuffer().then((buffer) => {\r\n            saveAs(new Blob([buffer], { type: 'application/octet-stream' }), 'DataGrid.xlsx');\r\n        });\r\n    });\r\n    e.cancel = true;\r\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _map from \"lodash-es/map\";\nimport _invoke from \"lodash-es/invoke\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\nimport Button from '../../elements/Button';\n/**\n * A modal can contain a row of actions.\n */\n\nvar ModalActions = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ModalActions, _Component);\n\n  function ModalActions() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n\n    _this.handleButtonOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e, buttonProps) {\n          _invoke(predefinedProps, 'onClick', e, buttonProps);\n\n          _invoke(_this.props, 'onActionClick', e, buttonProps);\n        }\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = ModalActions.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        actions = _this$props.actions,\n        children = _this$props.children,\n        className = _this$props.className,\n        content = _this$props.content;\n    var classes = cx('actions', className);\n    var rest = getUnhandledProps(ModalActions, this.props);\n    var ElementType = getElementType(ModalActions, this.props);\n\n    if (!childrenUtils.isNil(children)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), children);\n    }\n\n    if (!childrenUtils.isNil(content)) {\n      return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), content);\n    }\n\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), _map(actions, function (action) {\n      return Button.create(action, {\n        overrideProps: _this2.handleButtonOverrides\n      });\n    }));\n  };\n\n  return ModalActions;\n}(Component);\n\nModalActions.handledProps = [\"actions\", \"as\", \"children\", \"className\", \"content\", \"onActionClick\"];\nexport { ModalActions as default };\nModalActions.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Array of shorthand buttons. */\n  actions: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /**\n   * Action onClick handler when using shorthand `actions`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props from the clicked action.\n   */\n  onActionClick: customPropTypes.every([customPropTypes.disallow(['children']), PropTypes.func])\n} : {};\nModalActions.create = createShorthandFactory(ModalActions, function (actions) {\n  return {\n    actions: actions\n  };\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * A modal can contain content.\n */\n\nfunction ModalContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      image = props.image,\n      scrolling = props.scrolling;\n  var classes = cx(className, useKeyOnly(image, 'image'), useKeyOnly(scrolling, 'scrolling'), 'content');\n  var rest = getUnhandledProps(ModalContent, props);\n  var ElementType = getElementType(ModalContent, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nModalContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"image\", \"scrolling\"];\nModalContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A modal can contain image content. */\n  image: PropTypes.bool,\n\n  /** A modal can use the entire size of the screen. */\n  scrolling: PropTypes.bool\n} : {};\nModalContent.create = createShorthandFactory(ModalContent, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ModalContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A modal can contain a description with one or more paragraphs.\n */\n\nfunction ModalDescription(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('description', className);\n  var rest = getUnhandledProps(ModalDescription, props);\n  var ElementType = getElementType(ModalDescription, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nModalDescription.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nModalDescription.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default ModalDescription;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, useClassNamesOnNode, useKeyOnly } from '../../lib';\n/**\n * A modal has a dimmer.\n */\n\nfunction ModalDimmer(props) {\n  var blurring = props.blurring,\n      children = props.children,\n      className = props.className,\n      centered = props.centered,\n      content = props.content,\n      inverted = props.inverted,\n      mountNode = props.mountNode,\n      scrolling = props.scrolling;\n  var ref = React.useRef();\n  var classes = cx('ui', useKeyOnly(inverted, 'inverted'), useKeyOnly(!centered, 'top aligned'), 'page modals dimmer transition visible active', className);\n  var bodyClasses = cx('dimmable dimmed', useKeyOnly(blurring, 'blurring'), useKeyOnly(scrolling, 'scrolling'));\n  var rest = getUnhandledProps(ModalDimmer, props);\n  var ElementType = getElementType(ModalDimmer, props);\n  useClassNamesOnNode(mountNode, bodyClasses);\n  React.useEffect(function () {\n    if (ref.current && ref.current.style) {\n      ref.current.style.setProperty('display', 'flex', 'important');\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(Ref, {\n    innerRef: ref\n  }, /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children));\n}\n\nModalDimmer.handledProps = [\"as\", \"blurring\", \"centered\", \"children\", \"className\", \"content\", \"inverted\", \"mountNode\", \"scrolling\"];\nModalDimmer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A dimmer can be blurred. */\n  blurring: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A dimmer can center its contents in the viewport. */\n  centered: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A dimmer can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** The node where the modal should mount. Defaults to document.body. */\n  mountNode: PropTypes.any,\n\n  /** A dimmer can make body scrollable. */\n  scrolling: PropTypes.bool\n} : {};\nModalDimmer.create = createShorthandFactory(ModalDimmer, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ModalDimmer;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps } from '../../lib';\n/**\n * A modal can have a header.\n */\n\nfunction ModalHeader(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(ModalHeader, props);\n  var ElementType = getElementType(ModalHeader, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nModalHeader.handledProps = [\"as\", \"children\", \"className\", \"content\"];\nModalHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nModalHeader.create = createShorthandFactory(ModalHeader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ModalHeader;","// https://github.com/Semantic-Org/Semantic-UI/blob/2.4.1/src/definitions/modules/modal.js#L956\nvar OFFSET = 0; // https://github.com/Semantic-Org/Semantic-UI/blob/2.4.1/src/definitions/modules/modal.js#L990\n\nvar PADDING = 50;\n/**\n * Ensures that modal can fit viewport without scroll.\n *\n * @param modalRect {DOMRect}\n *\n * @see https://github.com/Semantic-Org/Semantic-UI/blob/2.4.1/src/definitions/modules/modal.js#L608\n */\n\nexport var canFit = function canFit(modalRect) {\n  // original: scrollHeight = $module.prop('scrollHeight'),\n  // is replaced by .height because scrollHeight provides integer which produces glitches\n  // https://github.com/Semantic-Org/Semantic-UI-React/issues/2221\n  var scrollHeight = modalRect.height + OFFSET; // $module.outerHeight() + settings.offset\n\n  var height = modalRect.height + OFFSET; // original: $(window).height()\n\n  var contextHeight = window.innerHeight;\n  var verticalCenter = contextHeight / 2;\n  var topOffset = -(height / 2); // padding with edge of page\n\n  var paddingHeight = PADDING;\n  var startPosition = verticalCenter + topOffset; // 0\n  // original: scrollHeight > height\n  //     ? startPosition + scrollHeight + paddingHeight < contextHeight\n  //     : height + paddingHeight * 2 < contextHeight\n\n  return startPosition + scrollHeight + paddingHeight < contextHeight;\n};\n/**\n * Creates legacy styles for IE11.\n *\n * @param isFitted {Boolean}\n * @param centered {Boolean}\n * @param modalRect {DOMRect}\n *\n * @see https://github.com/Semantic-Org/Semantic-UI/blob/2.4.1/src/definitions/modules/modal.js#L718\n */\n\nexport var getLegacyStyles = function getLegacyStyles(isFitted, centered, modalRect) {\n  var marginTop = centered && isFitted ? -(modalRect.height / 2) : 0;\n  var marginLeft = -(modalRect.width / 2);\n  return {\n    marginLeft: marginLeft,\n    marginTop: marginTop\n  };\n}; // https://github.com/Semantic-Org/Semantic-UI/blob/2.4.1/src/definitions/modules/modal.js#L631\n\n/* istanbul ignore next */\n\nexport var isLegacy = function isLegacy() {\n  return !window.ActiveXObject && 'ActiveXObject' in window;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _isPlainObject from \"lodash-es/isPlainObject\";\nimport _pick from \"lodash-es/pick\";\nimport _includes from \"lodash-es/includes\";\nimport _reduce from \"lodash-es/reduce\";\nimport _isEmpty from \"lodash-es/isEmpty\";\nimport _invoke from \"lodash-es/invoke\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { createRef, isValidElement } from 'react';\nimport shallowEqual from 'shallowequal';\nimport { ModernAutoControlledComponent as Component, childrenUtils, customPropTypes, doesNodeContainClick, eventStack, getElementType, getUnhandledProps, isBrowser, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\nimport Portal from '../../addons/Portal';\nimport ModalActions from './ModalActions';\nimport ModalContent from './ModalContent';\nimport ModalDescription from './ModalDescription';\nimport ModalDimmer from './ModalDimmer';\nimport ModalHeader from './ModalHeader';\nimport { canFit, getLegacyStyles, isLegacy } from './utils';\n\n/**\n * A modal displays content that temporarily blocks interactions with the main view of a site.\n * @see Confirm\n * @see Portal\n */\nvar Modal = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Modal, _Component);\n\n  function Modal() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.legacy = isBrowser() && isLegacy();\n    _this.ref = /*#__PURE__*/createRef();\n    _this.dimmerRef = /*#__PURE__*/createRef();\n    _this.latestDocumentMouseDownEvent = null;\n\n    _this.getMountNode = function () {\n      return isBrowser() ? _this.props.mountNode || document.body : null;\n    };\n\n    _this.handleActionsOverrides = function (predefinedProps) {\n      return {\n        onActionClick: function onActionClick(e, actionProps) {\n          _invoke(predefinedProps, 'onActionClick', e, actionProps);\n\n          _invoke(_this.props, 'onActionClick', e, _this.props);\n\n          _this.handleClose(e);\n        }\n      };\n    };\n\n    _this.handleClose = function (e) {\n      _this.setState({\n        open: false\n      });\n\n      _invoke(_this.props, 'onClose', e, _extends({}, _this.props, {\n        open: false\n      }));\n    };\n\n    _this.handleDocumentMouseDown = function (e) {\n      _this.latestDocumentMouseDownEvent = e;\n    };\n\n    _this.handleDocumentClick = function (e) {\n      var closeOnDimmerClick = _this.props.closeOnDimmerClick;\n      var currentDocumentMouseDownEvent = _this.latestDocumentMouseDownEvent;\n      _this.latestDocumentMouseDownEvent = null;\n      if (!closeOnDimmerClick || doesNodeContainClick(_this.ref.current, currentDocumentMouseDownEvent) || doesNodeContainClick(_this.ref.current, e)) return;\n\n      _this.setState({\n        open: false\n      });\n\n      _invoke(_this.props, 'onClose', e, _extends({}, _this.props, {\n        open: false\n      }));\n    };\n\n    _this.handleIconOverrides = function (predefinedProps) {\n      return {\n        onClick: function onClick(e) {\n          _invoke(predefinedProps, 'onClick', e);\n\n          _this.handleClose(e);\n        }\n      };\n    };\n\n    _this.handleOpen = function (e) {\n      _invoke(_this.props, 'onOpen', e, _extends({}, _this.props, {\n        open: true\n      }));\n\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handlePortalMount = function (e) {\n      var eventPool = _this.props.eventPool;\n\n      _this.setState({\n        scrolling: false\n      });\n\n      _this.setPositionAndClassNames();\n\n      eventStack.sub('mousedown', _this.handleDocumentMouseDown, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n      eventStack.sub('click', _this.handleDocumentClick, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n\n      _invoke(_this.props, 'onMount', e, _this.props);\n    };\n\n    _this.handlePortalUnmount = function (e) {\n      var eventPool = _this.props.eventPool;\n      cancelAnimationFrame(_this.animationRequestId);\n      eventStack.unsub('mousedown', _this.handleDocumentMouseDown, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n      eventStack.unsub('click', _this.handleDocumentClick, {\n        pool: eventPool,\n        target: _this.dimmerRef.current\n      });\n\n      _invoke(_this.props, 'onUnmount', e, _this.props);\n    };\n\n    _this.setPositionAndClassNames = function () {\n      var centered = _this.props.centered;\n      var scrolling;\n      var newState = {};\n\n      if (_this.ref.current) {\n        var rect = _this.ref.current.getBoundingClientRect();\n\n        var isFitted = canFit(rect);\n        scrolling = !isFitted; // Styles should be computed for IE11\n\n        var legacyStyles = _this.legacy ? getLegacyStyles(isFitted, centered, rect) : {};\n\n        if (!shallowEqual(_this.state.legacyStyles, legacyStyles)) {\n          newState.legacyStyles = legacyStyles;\n        }\n\n        if (_this.state.scrolling !== scrolling) {\n          newState.scrolling = scrolling;\n        }\n      }\n\n      if (!_isEmpty(newState)) _this.setState(newState);\n      _this.animationRequestId = requestAnimationFrame(_this.setPositionAndClassNames);\n    };\n\n    _this.renderContent = function (rest) {\n      var _this$props = _this.props,\n          actions = _this$props.actions,\n          basic = _this$props.basic,\n          children = _this$props.children,\n          className = _this$props.className,\n          closeIcon = _this$props.closeIcon,\n          content = _this$props.content,\n          header = _this$props.header,\n          size = _this$props.size,\n          style = _this$props.style;\n      var _this$state = _this.state,\n          legacyStyles = _this$state.legacyStyles,\n          scrolling = _this$state.scrolling;\n      var classes = cx('ui', size, useKeyOnly(basic, 'basic'), useKeyOnly(_this.legacy, 'legacy'), useKeyOnly(scrolling, 'scrolling'), 'modal transition visible active', className);\n      var ElementType = getElementType(Modal, _this.props);\n      var closeIconName = closeIcon === true ? 'close' : closeIcon;\n      var closeIconJSX = Icon.create(closeIconName, {\n        overrideProps: _this.handleIconOverrides\n      });\n      return /*#__PURE__*/React.createElement(Ref, {\n        innerRef: _this.ref\n      }, /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        style: _extends({}, legacyStyles, style)\n      }), closeIconJSX, childrenUtils.isNil(children) ? /*#__PURE__*/React.createElement(React.Fragment, null, ModalHeader.create(header, {\n        autoGenerateKey: false\n      }), ModalContent.create(content, {\n        autoGenerateKey: false\n      }), ModalActions.create(actions, {\n        overrideProps: _this.handleActionsOverrides\n      })) : children));\n    };\n\n    return _this;\n  }\n\n  var _proto = Modal.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.handlePortalUnmount();\n  } // Do not access document when server side rendering\n  ;\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        centered = _this$props2.centered,\n        closeOnDocumentClick = _this$props2.closeOnDocumentClick,\n        dimmer = _this$props2.dimmer,\n        eventPool = _this$props2.eventPool,\n        trigger = _this$props2.trigger;\n    var _this$state2 = this.state,\n        open = _this$state2.open,\n        scrolling = _this$state2.scrolling;\n    var mountNode = this.getMountNode(); // Short circuit when server side rendering\n\n    if (!isBrowser()) {\n      return /*#__PURE__*/isValidElement(trigger) ? trigger : null;\n    }\n\n    var unhandled = getUnhandledProps(Modal, this.props);\n    var portalPropNames = Portal.handledProps;\n\n    var rest = _reduce(unhandled, function (acc, val, key) {\n      if (!_includes(portalPropNames, key)) acc[key] = val;\n      return acc;\n    }, {});\n\n    var portalProps = _pick(unhandled, portalPropNames); // Heads up!\n    //\n    // The SUI CSS selector to prevent the modal itself from blurring requires an immediate .dimmer child:\n    // .blurring.dimmed.dimmable>:not(.dimmer) { ... }\n    //\n    // The .blurring.dimmed.dimmable is the body, so that all body content inside is blurred.\n    // We need the immediate child to be the dimmer to :not() blur the modal itself!\n    // Otherwise, the portal div is also blurred, blurring the modal.\n    //\n    // We cannot them wrap the modalJSX in an actual <Dimmer /> instead, we apply the dimmer classes to the <Portal />.\n\n\n    return /*#__PURE__*/React.createElement(Portal, _extends({\n      closeOnDocumentClick: closeOnDocumentClick\n    }, portalProps, {\n      trigger: trigger,\n      eventPool: eventPool,\n      mountNode: mountNode,\n      open: open,\n      onClose: this.handleClose,\n      onMount: this.handlePortalMount,\n      onOpen: this.handleOpen,\n      onUnmount: this.handlePortalUnmount\n    }), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.dimmerRef\n    }, ModalDimmer.create(_isPlainObject(dimmer) ? dimmer : {}, {\n      autoGenerateKey: false,\n      defaultProps: {\n        blurring: dimmer === 'blurring',\n        inverted: dimmer === 'inverted'\n      },\n      overrideProps: {\n        children: this.renderContent(rest),\n        centered: centered,\n        mountNode: mountNode,\n        scrolling: scrolling\n      }\n    })));\n  };\n\n  return Modal;\n}(Component);\n\nModal.handledProps = [\"actions\", \"as\", \"basic\", \"centered\", \"children\", \"className\", \"closeIcon\", \"closeOnDimmerClick\", \"closeOnDocumentClick\", \"content\", \"defaultOpen\", \"dimmer\", \"eventPool\", \"header\", \"mountNode\", \"onActionClick\", \"onClose\", \"onMount\", \"onOpen\", \"onUnmount\", \"open\", \"size\", \"style\", \"trigger\"];\nModal.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Shorthand for Modal.Actions. Typically an array of button shorthand. */\n  actions: customPropTypes.itemShorthand,\n\n  /** A modal can reduce its complexity */\n  basic: PropTypes.bool,\n\n  /** A modal can be vertically centered in the viewport */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for the close icon. Closes the modal on click. */\n  closeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.object, PropTypes.bool]),\n\n  /** Whether or not the Modal should close when the dimmer is clicked. */\n  closeOnDimmerClick: PropTypes.bool,\n\n  /** Whether or not the Modal should close when the document is clicked. */\n  closeOnDocumentClick: PropTypes.bool,\n\n  /** Simple text content for the Modal. */\n  content: customPropTypes.itemShorthand,\n\n  /** Initial value of open. */\n  defaultOpen: PropTypes.bool,\n\n  /** A Modal can appear in a dimmer. */\n  dimmer: PropTypes.oneOfType([PropTypes.bool, PropTypes.func, PropTypes.object, PropTypes.oneOf(['inverted', 'blurring'])]),\n\n  /** Event pool namespace that is used to handle component events */\n  eventPool: PropTypes.string,\n\n  /** Modal displayed above the content in bold. */\n  header: customPropTypes.itemShorthand,\n\n  /** The node where the modal should mount. Defaults to document.body. */\n  mountNode: PropTypes.any,\n\n  /**\n   * Action onClick handler when using shorthand `actions`.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onActionClick: PropTypes.func,\n\n  /**\n   * Called when a close event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Called when the modal is mounted on the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onMount: PropTypes.func,\n\n  /**\n   * Called when an open event happens.\n   *\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Called when the modal is unmounted from the DOM.\n   *\n   * @param {null}\n   * @param {object} data - All props.\n   */\n  onUnmount: PropTypes.func,\n\n  /** Controls whether or not the Modal is displayed. */\n  open: PropTypes.bool,\n\n  /** A modal can vary in size */\n  size: PropTypes.oneOf(['mini', 'tiny', 'small', 'large', 'fullscreen']),\n\n  /** Custom styles. */\n  style: PropTypes.object,\n\n  /** Element to be rendered in-place where the modal is defined. */\n  trigger: PropTypes.node\n  /**\n   * NOTE: Any unhandled props that are defined in Modal are passed-through\n   * to the inner Portal.\n   */\n\n} : {};\nModal.defaultProps = {\n  centered: true,\n  dimmer: true,\n  closeOnDimmerClick: true,\n  closeOnDocumentClick: false,\n  eventPool: 'Modal'\n};\nModal.autoControlledProps = ['open'];\nModal.Actions = ModalActions;\nModal.Content = ModalContent;\nModal.Description = ModalDescription;\nModal.Dimmer = ModalDimmer;\nModal.Header = ModalHeader;\nexport default Modal;"],"sourceRoot":""}