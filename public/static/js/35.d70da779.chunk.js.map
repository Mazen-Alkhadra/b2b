{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/elements/Container/Container.js","pages/landing section/Home.js"],"names":["Container","props","children","className","content","fluid","text","textAlign","classes","cx","useKeyOnly","useTextAlignProp","rest","getUnhandledProps","ElementType","getElementType","React","createElement","_extends","childrenUtils","isNil","handledProps","propTypes","withTranslation","t","style","width","paddingTop","padding","as","color","basic","Link","to","toUpperCase","circular"],"mappings":"6FAAA,mEASA,SAASA,EAAUC,GACjB,IAAIC,EAAWD,EAAMC,SACjBC,EAAYF,EAAME,UAClBC,EAAUH,EAAMG,QAChBC,EAAQJ,EAAMI,MACdC,EAAOL,EAAMK,KACbC,EAAYN,EAAMM,UAClBC,EAAUC,YAAG,KAAMC,YAAWJ,EAAM,QAASI,YAAWL,EAAO,SAAUM,YAAiBJ,GAAY,YAAaJ,GACnHS,EAAOC,YAAkBb,EAAWC,GACpCa,EAAcC,YAAef,EAAWC,GAC5C,OAAoBe,IAAMC,cAAcH,EAAaI,YAAS,GAAIN,EAAM,CACtET,UAAWK,IACTW,IAAcC,MAAMlB,GAAYE,EAAUF,GAGhDF,EAAUqB,aAAe,CAAC,KAAM,WAAY,YAAa,UAAW,QAAS,OAAQ,aACrFrB,EAAUsB,UAqBN,GACWtB,O,iCC/Cf,oFAmBeuB,yBAbF,SAAC,GAAW,IAATC,EAAQ,EAARA,EACZ,OACI,cAAC,IAAD,CAAWjB,UAAU,SAASkB,MAAO,CAAEC,MAAO,OAAQC,WAAY,QAAlE,SACI,eAAC,IAAD,CAASpB,UAAU,SAASkB,MAAO,CAAEG,QAAS,IAA9C,UACI,cAAC,IAAD,CAAQC,GAAG,KAAKC,MAAM,OAAO1B,QAASoB,EAAE,iBACxC,cAAC,IAAD,IACA,cAAC,IAAD,CAAQO,OAAK,EAACF,GAAIG,IAAMC,GAAG,UAAU7B,QAASoB,EAAE,UAAUU,cAAeJ,MAAM,OAAOK,UAAQ","file":"static/js/35.d70da779.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useTextAlignProp } from '../../lib';\n/**\n * A container limits content to a maximum width.\n */\n\nfunction Container(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      fluid = props.fluid,\n      text = props.text,\n      textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(text, 'text'), useKeyOnly(fluid, 'fluid'), useTextAlignProp(textAlign), 'container', className);\n  var rest = getUnhandledProps(Container, props);\n  var ElementType = getElementType(Container, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nContainer.handledProps = [\"as\", \"children\", \"className\", \"content\", \"fluid\", \"text\", \"textAlign\"];\nContainer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Container has no maximum width. */\n  fluid: PropTypes.bool,\n\n  /** Reduce maximum width to more naturally accommodate text. */\n  text: PropTypes.bool,\n\n  /** Align container text. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS)\n} : {};\nexport default Container;","import React from 'react';\r\nimport { Header, Segment, Button, Container } from 'semantic-ui-react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { Link } from 'react-router-dom';\r\nimport { Separator } from '../../components';\r\n\r\nconst Home = ({ t }) => {\r\n    return (\r\n        <Container textAlign='center' style={{ width: '50vw', paddingTop: '30vh' }}>\r\n            <Segment textAlign='center' style={{ padding: 50 }}>\r\n                <Header as='h1' color='teal' content={t('WelcomeToOb')} />\r\n                <Separator />\r\n                <Button basic as={Link} to='/signin' content={t('SignIn').toUpperCase()} color='teal' circular />\r\n            </Segment>\r\n        </Container>\r\n\r\n    );\r\n};\r\n\r\nexport default withTranslation()(Home);\r\n"],"sourceRoot":""}