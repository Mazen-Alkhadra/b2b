{"version":3,"sources":["pages/admin section/settings/Contacts.js"],"names":["Contacts","t","useTranslation","useState","error","setError","btnLoading","setBtnLoading","loading","setLoading","useForm","defaultValues","mobile","email","address","moreInfo","idContactInfo","control","handleSubmit","setValue","useEffect","getData","request","get","data","contactData","onSaveClick","post","basic","title","name","render","field","Input","label","ref","onChange","TextArea","fluid","content","primary","onClick","errors","console","log"],"mappings":"kNA8HeA,UAtHE,WACb,IAAQC,EAAMC,cAAND,EACR,EAA0BE,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAGA,EAA4CC,YAAQ,CAChDC,cAAe,CACXC,OAAQ,GACRC,MAAO,GACPC,QAAS,GACTC,SAAU,GACVC,cAAe,QANfC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,SAU/BC,qBAAU,WACNC,MAED,IAGH,IAGMA,EAAO,iDAAG,kHAERZ,GAAW,GAFH,SAGyBa,IAAQC,IAAI,4BAHrC,gBAGQC,EAHR,EAGAA,KAAQA,MACVC,EAAcD,EAAK,MAErBL,EAAS,QAASM,EAAYZ,OAC9BM,EAAS,SAAUM,EAAYb,QAC/BO,EAAS,UAAWM,EAAYX,SAChCK,EAAS,WAAYM,EAAYV,UACjCI,EAAS,gBAAiBM,EAAYT,gBAVlC,kDAaRX,EAAS,EAAD,IAbA,yBAeRI,GAAW,GAfH,6EAAH,qDAmBPiB,EAAW,iDAAG,WAAOF,GAAP,2FAEZjB,GAAc,GAFF,SAGNe,IAAQK,KAAK,6BAA8BH,GAHrC,sDAKZnB,EAAS,EAAD,IALI,uBAOZE,GAAc,GAPF,0EAAH,sDAWjB,OAAIC,EAAgB,cAAC,IAAD,IAChBJ,EAAc,cAAC,IAAD,IAEd,eAAC,IAAD,CAASwB,OAAK,EAAd,UACI,cAAC,IAAD,CAAYC,MAAO5B,EAAE,eACrB,cAAC,IAAD,CAAS2B,OAAK,EAAd,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIE,KAAK,SACLb,QAASA,EACTc,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACJ,cAAC,IAAKC,MAAN,yBACIC,MAAOjC,EAAE,WACL+B,GAFR,IAGIG,IAAK,KACLC,SAAUJ,EAAMI,eAI5B,cAAC,IAAD,CACIN,KAAK,QACLb,QAASA,EACTc,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACJ,cAAC,IAAKC,MAAN,yBACIC,MAAOjC,EAAE,UACL+B,GAFR,IAGIG,IAAK,KACLC,SAAUJ,EAAMI,eAI5B,cAAC,IAAD,CACIN,KAAK,UACLb,QAASA,EACTc,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACJ,cAAC,IAAKK,SAAN,yBACIH,MAAOjC,EAAE,YACL+B,GAFR,IAGIG,IAAK,KACLC,SAAUJ,EAAMI,eAI5B,cAAC,IAAD,CACIN,KAAK,WACLb,QAASA,EACTc,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OACJ,cAAC,IAAKK,SAAN,yBACIH,MAAOjC,EAAE,UACL+B,GAFR,IAGIG,IAAK,KACLC,SAAUJ,EAAMI,eAI5B,cAAC,IAAD,CAAQE,OAAK,EAAC9B,QAASF,EAAYiC,QAAStC,EAAE,QAASuC,SAAO,EAACC,QAASvB,GAxFvE,SAACM,GAAD,OAAUE,EAAYF,MACvB,SAACkB,GAAD,OAAYC,QAAQC,IAAIF","file":"static/js/34.74bdc94a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\nimport request from '../../../api';\r\nimport { ErrorSegment, PageHeader, Spinner } from '../../../components';\r\n\r\nconst Contacts = () => {\r\n    const { t } = useTranslation();\r\n    const [error, setError] = useState('');\r\n    const [btnLoading, setBtnLoading] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n    const { control, handleSubmit, setValue } = useForm({\r\n        defaultValues: {\r\n            mobile: '',\r\n            email: '',\r\n            address: '',\r\n            moreInfo: '',\r\n            idContactInfo: null\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    const onSubmit = (data) => onSaveClick(data);\r\n    const onError = (errors) => console.log(errors);\r\n\r\n    const getData = async () => {\r\n        try {\r\n            setLoading(true);\r\n            const { data: { data } } = await request.get('/admin/contact-info/full');\r\n            const contactData = data[0];\r\n            if (contactData) {\r\n                setValue('email', contactData.email);\r\n                setValue('mobile', contactData.mobile);\r\n                setValue('address', contactData.address);\r\n                setValue('moreInfo', contactData.moreInfo);\r\n                setValue('idContactInfo', contactData.idContactInfo);\r\n            }\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const onSaveClick = async (data) => {\r\n        try {\r\n            setBtnLoading(true);\r\n            await request.post('/admin/contact-info/update', data);\r\n        } catch (err) {\r\n            setError(err);\r\n        } finally {\r\n            setBtnLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading) return <Spinner />;\r\n    if (error) return <ErrorSegment />;\r\n    return (\r\n        <Segment basic>\r\n            <PageHeader title={t('ContactUs')} />\r\n            <Segment basic>\r\n                <Form>\r\n                    <Controller\r\n                        name='mobile'\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <Form.Input\r\n                                label={t('Mobile')}\r\n                                {...field}\r\n                                ref={null}\r\n                                onChange={field.onChange}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Controller\r\n                        name='email'\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <Form.Input\r\n                                label={t('Email')}\r\n                                {...field}\r\n                                ref={null}\r\n                                onChange={field.onChange}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Controller\r\n                        name='address'\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <Form.TextArea\r\n                                label={t('Address')}\r\n                                {...field}\r\n                                ref={null}\r\n                                onChange={field.onChange}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Controller\r\n                        name='moreInfo'\r\n                        control={control}\r\n                        render={({ field }) => (\r\n                            <Form.TextArea\r\n                                label={t('Other')}\r\n                                {...field}\r\n                                ref={null}\r\n                                onChange={field.onChange}\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Button fluid loading={btnLoading} content={t(\"Save\")} primary onClick={handleSubmit(onSubmit, onError)} />\r\n                </Form>\r\n            </Segment>\r\n        </Segment>\r\n    );\r\n};\r\n\r\nexport default Contacts;"],"sourceRoot":""}